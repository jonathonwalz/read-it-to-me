{"version":3,"file":"read-it-to-me.cjs.js","sources":["../../src/js/synthesis.js","../../src/js/control-bar.js","../../src/js/read-it-to-me.js"],"sourcesContent":["export function initSynthesis(synth, callback) {\n  let voices = [], failedToLoadVoices = false;\n\n  if (!synth && typeof speechSynthesis !== 'undefined') {\n    synth = speechSynthesis;\n  }\n\n  if (!synth) {\n    callback(new Error('Speech Synthesis is unavailable.'));\n    return;\n  }\n\n  let play = (config, callback = () => {}) => {\n    const u = new SpeechSynthesisUtterance(config.text);\n    u.lang = 'en-US';\n    u.rate = .8;\n    //if voices is populated and the 'Samantha' voice is present on the browser/device, load her up, otherwise don't set a voice so the default is allowed to do it's thing.\n    if (voices.length > 0) {\n      for (let i = 0; i < voices.length; i++) {\n        if (voices[i].lang.indexOf('en') === 0) {\n          if (voices[i].name === 'Samantha') {\n            u.voice = voices[i];\n            break;\n          }\n        }\n      }\n    }\n\n    u.onend = () => callback(null, config);\n\n    u.onerror = event => {\n      setTimeout(() => callback(event.error || new Error('Unknown speech synthesis error'), config), 100);\n    };\n\n    // speak the new utterance\n    synth.speak(u);\n  };\n\n  let pause = () => {\n    synth.pause();\n  };\n\n  let resume = () => {\n    synth.resume();\n  };\n\n  let cancel = () => {\n    synth.cancel();\n  };\n\n  const result = {play, pause, resume, cancel};\n\n  //populate voices [chrome currently will only do this in the context of the onvoiceschanged event]\n  voices = synth.getVoices();\n  if (voices.length === 0) {\n    if (synth.onvoiceschanged !== undefined) {\n      synth.onvoiceschanged = function () {\n        voices = synth.getVoices();\n        callback(null, result);\n      };\n    } else {\n      failedToLoadVoices = true;\n    }\n  }\n\n  // without this initial cancel, Chrome will pretty consistently fail to play the very first utterance (then works on every other utterance)\n  synth.cancel();\n\n  if (!voices.length && failedToLoadVoices) {\n    callback(new Error('Unable to load voice list'));\n  } else if (voices.length) {\n    callback(null, result);\n  }\n}\n","export function createControlBar({cancelAudio, setReadItToMe}, {document, controlBarElement}) {\n  // build the control bar\n  const controlBar = controlBarElement || document.createElement('div');\n  controlBar.classList.add('read-it-to-me-control-bar');\n  controlBar.setAttribute('tabindex', '0');\n  controlBar.setAttribute('aria-describedby', 'ritm-sr-message');\n  controlBar.innerHTML = `<div class=\"toggle-wrapper\">\n                            <p class=\"visually-hidden\" id=\"ritm-sr-message\">Screen-reader users: there is a rudimentary \"on-demand\" read-aloud feature in use on this page called \"Read-it-to-Me\".  This new feature, which isn't meant as a screen-reader alternative, adds more tabable areas in the document which are great for keyboard users not using screen-readers, but are likely to be annoying for you. You can toggle off/on \"Read-it-to-Me\" using this checkbox.</p>\n                            <p class=\"read-it-to-me-label\">Toggle Read-it-to-Me</p>\n                            <label class=\"switch\" aria-label=\"Toggle Read-it-to-Me.\" aria-describedby=\"ritm-sr-message\">\n                              <input type=\"checkbox\" class=\"switch-input\" checked>\n                              <span class=\"switch-outline\"></span>\n                              <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\n                              <span class=\"switch-handle\"></span>\n                            </label>\n                          </div>\n                          <div class=\"cancel-audio-wrapper\">\n                            <button type=\"button\" class=\"btn btn-default btn-lg\">Cancel audio</button>\n                          </div>`;\n\n  const cancelButton = controlBar.querySelector('button');\n  const inputSwitch = controlBar.querySelector('input.switch-input');\n\n  const toggleReadItToMe = (e) => {\n    setReadItToMe(e.target.checked, true);\n  };\n\n  const setReadItToMeStatus = status => inputSwitch.checked = status;\n\n  const controlBarFocusIn = (e) => {\n    if (e.target && controlBar.contains(e.target)) {\n      if (!controlBar.classList.contains('control-bar-show')) {\n        showControlBar();\n      }\n    }\n  };\n\n  const controlBarFocusOut = (e) => {\n    if ((e.relatedTarget && !controlBar.contains(e.relatedTarget)) || !e.relatedTarget) {\n      hideControlBar();\n    }\n  };\n\n  const showCancelButton = () => {\n    controlBar.classList.add('show-ritm-cancel');\n  };\n\n  const hideCancelButton = () => {\n    controlBar.classList.remove('show-ritm-cancel');\n  };\n\n  const showControlBar = () => {\n    controlBar.classList.add('control-bar-show');\n  };\n\n  const hideControlBar = () => {\n    controlBar.classList.remove('control-bar-show');\n  };\n\n  cancelButton.addEventListener('click', cancelAudio(controlBar));\n  inputSwitch.addEventListener('change', toggleReadItToMe);\n  controlBar.addEventListener('focusin', controlBarFocusIn);\n  controlBar.addEventListener('focusout', controlBarFocusOut);\n\n  if (!controlBarElement) {\n    // append the control bar to body where it's least likely to be effected by layout styling and the control bubble so we can attach events to it.\n    let docBody = document.body;\n    docBody.insertBefore(controlBar, docBody.firstChild);\n  }\n\n  return {\n    showCancelButton,\n    hideCancelButton,\n    showControlBar,\n    hideControlBar,\n    setReadItToMe: setReadItToMeStatus\n  };\n}","import '../scss/read-it-to-me.scss';\n\nimport {initSynthesis} from './synthesis';\nimport {createControlBar} from './control-bar';\n\nlet synth;\nconst ritmDisabledClassName = 'ritm-disabled';\nconst groupClassName = 'read-it-to-me-content-group';\nconst focusClassName = 'focusin';\nlet contentQueue = [];\nlet controlBar;\nlet ritmEnabled = true;\nlet eventsBin = {\n  play: null,\n  pause: null,\n  cancel: null,\n  toggle: null\n};\n\nlet setup = () => {\n  addReadItToMeElements();\n\n  // Toggle RITM off if set as disabled in sessionStorage\n  if (sessionStorage.getItem('readItToMeDisabled')) {\n    setReadItToMe(false);\n  }\n};\n\nlet addReadItToMeElements = () => {\n  // build the control bubble\n  const controlBubble = document.createElement('div');\n  controlBubble.classList.add('read-it-to-me-control-bubble');\n  controlBubble.tabIndex = -1;\n  controlBubble.innerHTML = '<p class=\"read-it-to-me-label\"></p><button type=\"button\" class=\"play-pause-resume\"></button><button type=\"button\" class=\"cancel-audio\"><span class=\"visually-hidden\">Cancel audio</a></button>';\n\n  const groupSelectorElements = document.querySelectorAll(`.${groupClassName}`);\n  // Inner wrap each readable group in a new div.read-this-to-me\n  const wrapSource = document.createElement('div');\n  wrapSource.classList.add('read-this-to-me');\n  groupSelectorElements.forEach((elem) => {\n    let wrapper = wrapSource.cloneNode(false);\n    elem.appendChild(wrapper);\n    while (elem.firstChild !== wrapper) {\n      wrapper.appendChild(elem.firstChild);\n    }\n\n    const clonedControlBubble = controlBubble.cloneNode(true);\n\n    clonedControlBubble.addEventListener('focusin', focusInListener(elem));\n    clonedControlBubble.addEventListener('focusout', focusOutListener(elem));\n    clonedControlBubble.querySelector('button.play-pause-resume').addEventListener('click', (e) => {\n      if (!ritmEnabled) {return false;}\n\n      e.stopPropagation();\n      let currentContentGroup = e.target.closest(`.${groupClassName}`);\n      contentGroupManager(currentContentGroup);\n    });\n    clonedControlBubble.querySelector('button.cancel-audio').addEventListener('click', cancelAudio(clonedControlBubble));\n\n    elem.insertBefore(clonedControlBubble, wrapper);\n  });\n\n  // build the control bar\n  controlBar = createControlBar({cancelAudio, setReadItToMe}, {document});\n};\n\nlet clearStrayFocus = () => {\n  let strayFocus = document.querySelector(`.${focusClassName}`);\n  if (strayFocus) {\n    strayFocus.classList.remove(focusClassName);\n  }\n};\n\nconst focusInListener = elem => e => {\n  if (!ritmEnabled) {return false;}\n\n  // don't want this bubbling up from nested groups\n  e.stopPropagation();\n\n  elem.classList.add(focusClassName);\n};\n\nconst focusOutListener = elem => e => {\n  // don't want this bubbling up from nested groups\n  e.stopPropagation();\n\n  elem.classList.remove(focusClassName);\n};\n\nlet setReadItToMe = (enabled, logEvent) => {\n  let groupSelectorElements = document.querySelectorAll(`.${groupClassName}`);\n  if (enabled) {\n    ritmEnabled = true;\n    sessionStorage.removeItem('readItToMeDisabled');\n    groupSelectorElements.forEach((elem) => {\n      elem.classList.remove(ritmDisabledClassName);\n    });\n  }\n  else {\n    ritmEnabled = false;\n    clearStrayFocus();\n    synth.cancel();\n    sessionStorage.setItem('readItToMeDisabled', '1');\n    groupSelectorElements.forEach((elem) => {\n      elem.classList.add(ritmDisabledClassName);\n      if (!elem.classList.contains('ritm-do-not-strip-tabindex')) {\n        elem.removeAttribute('tabindex');\n      }\n    });\n  }\n\n  controlBar.setReadItToMe(ritmEnabled);\n\n  // optional track toggle event\n  if (logEvent && eventsBin.toggle) {\n    eventsBin.toggle(enabled);\n  }\n};\n\nlet cancelAudio = toFocus => function() {\n  // optional track cancel event\n  if (eventsBin.cancel) {\n    try {\n      eventsBin.cancel();\n    }\n    catch (e) {}\n  }\n  // move focus to appropriate place, because the cancel button is about to disappear\n  if (toFocus.contains(this)) {\n    toFocus.focus();\n  }\n  cancel();\n};\n\nlet contentGroupManager = (currentContentGroup) => {\n  if (!currentContentGroup.classList.contains('read-it-to-me-play') && !currentContentGroup.classList.contains('read-it-to-me-pause')) {\n    contentQueue.push(currentContentGroup);\n    if (document.querySelectorAll('.read-it-to-me-play').length > 0 || document.querySelectorAll('.read-it-to-me-pause').length > 0) {\n      cancel();\n    }\n    else {\n      play();\n    }\n    currentContentGroup.classList.toggle('read-it-to-me-play');\n  }\n  else if (currentContentGroup.classList.contains('read-it-to-me-play')) {\n    pause();\n    currentContentGroup.classList.toggle('read-it-to-me-play');\n    currentContentGroup.classList.toggle('read-it-to-me-pause');\n  }\n  else if (currentContentGroup.classList.contains('read-it-to-me-pause')) {\n    resume();\n    currentContentGroup.classList.toggle('read-it-to-me-play');\n    currentContentGroup.classList.toggle('read-it-to-me-pause');\n  }\n};\n\nlet clearContentGroup = (contentGroup) => {\n  contentGroup.classList.remove('read-it-to-me-play');\n  contentGroup.classList.remove('read-it-to-me-pause');\n};\n\nlet getPlainTextWithPsuedoSemantics = (textAncestor) => {\n  // In a copy of the node list, pepper in (dramatically misuse, hehe) some punctuation for the purpose of adding meaningful pauses and 'emphasis' during text readout.\n  let clonedTextAncestor = textAncestor.cloneNode(true);\n  clonedTextAncestor.querySelectorAll('p, li, abbr, strong, em, h1, h2, h3, h4, h5, h6').forEach((elem) => {\n    let tag = elem.tagName.toUpperCase();\n    if (tag === 'P') {\n      elem.appendChild(document.createTextNode('. '));\n    }\n    else if (tag === \"ABBR\") {\n      let elemText = elem.textContent;\n      let arr = elemText.split('');\n      elem.textContent = arr.join('.');\n    }\n    else if (tag === 'STRONG' || tag === 'EM') {\n      elem.insertBefore(document.createTextNode(', '), elem.firstChild);\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'LI') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'H1' || tag === 'H2' || tag === 'H3' || tag === 'H4' || tag === 'H5' || tag === 'H6') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n  });\n\n  // return the modified text\n  return clonedTextAncestor.textContent;\n};\n\nlet utteranceEnd = () => {\n  if (contentQueue.length > 0) {\n    clearContentGroup(contentQueue[0]);\n    controlBar.hideControlBar();\n    controlBar.hideCancelButton();\n    contentQueue.shift();\n  }\n  if (contentQueue.length > 0) {\n    play();\n  }\n};\n\nlet play = () => {\n  // setup the new utterance\n  let enhancedText = getPlainTextWithPsuedoSemantics(contentQueue[0].querySelector('.read-this-to-me'));\n  synth.play({text: enhancedText}, utteranceEnd);\n  controlBar.showCancelButton();\n  controlBar.showControlBar();\n\n  // optional track play event\n  if (eventsBin.play) {\n    eventsBin.play();\n  }\n};\n\nlet pause = () => {\n  synth.pause();\n\n  // optional track pause event\n  if (eventsBin.pause) {\n    eventsBin.pause();\n  }\n};\n\nlet resume = () => {\n  synth.resume();\n};\n\nlet cancel = () => {\n  controlBar.hideCancelButton();\n  synth.cancel();\n};\n\nexport function init(selectors) {\n  // If there's nothing to read, don't initialize\n  if (!((selectors && document.querySelectorAll(selectors).length > 0) || document.querySelectorAll(`.${groupClassName}`).length > 0)) {\n    return;\n  }\n\n  initSynthesis(undefined, (error, synthesis) => {\n    if (!error && synthesis) {\n      synth = synthesis;\n\n      // if custom selectors were passed in, give the associated elements the default group class\n      if (selectors && document.querySelectorAll(selectors).length > 0) {\n        document.querySelectorAll(selectors).forEach((elem) => {\n          elem.classList.add(groupClassName);\n        });\n      }\n\n      setup();\n    }\n    else {\n      // strip out classes that would apply ReadItToMe visuals\n      document.querySelectorAll(`.${groupClassName}`).forEach((elem) => {\n        elem.classList.remove(groupClassName, focusClassName);\n      });\n    }\n  });\n}\n\nexport function isEnabled () {\n  return ritmEnabled;\n}\n\nexport function currentUtteranceIdentifier() {\n  if (contentQueue[0] && contentQueue[0].dataset.ritmOptionalTrackingIdentifier && contentQueue[0].dataset.ritmOptionalTrackingIdentifier !== \"\") {\n    return contentQueue[0].dataset.ritmOptionalTrackingIdentifier;\n  }\n  return false;\n}\n\nexport function eventTracking(obj) {\n  if (obj) {\n    if (obj.play && typeof obj.play === 'function') {\n      eventsBin.play = obj.play;\n    }\n    if (obj.pause && typeof obj.pause === 'function') {\n      eventsBin.pause = obj.pause;\n    }\n    if (obj.cancel && typeof obj.cancel === 'function') {\n      eventsBin.cancel = obj.cancel;\n    }\n    if (obj.toggle && typeof obj.toggle === 'function') {\n      eventsBin.toggle = obj.toggle;\n    }\n  }\n}"],"names":["initSynthesis","synth","callback","voices","failedToLoadVoices","speechSynthesis","result","play","config","u","SpeechSynthesisUtterance","text","lang","rate","length","i","indexOf","name","voice","onend","onerror","event","setTimeout","error","Error","speak","pause","resume","cancel","getVoices","undefined","onvoiceschanged","createControlBar","cancelAudio","setReadItToMe","document","controlBarElement","controlBar","createElement","classList","add","setAttribute","innerHTML","cancelButton","querySelector","inputSwitch","showControlBar","hideControlBar","remove","addEventListener","e","target","checked","contains","relatedTarget","docBody","body","insertBefore","firstChild","showCancelButton","hideCancelButton","status","ritmDisabledClassName","groupClassName","focusClassName","contentQueue","ritmEnabled","eventsBin","toggle","setup","addReadItToMeElements","sessionStorage","getItem","controlBubble","tabIndex","groupSelectorElements","querySelectorAll","wrapSource","forEach","elem","wrapper","cloneNode","appendChild","clonedControlBubble","focusInListener","focusOutListener","stopPropagation","currentContentGroup","closest","contentGroupManager","clearStrayFocus","strayFocus","enabled","logEvent","removeItem","setItem","removeAttribute","toFocus","this","focus","push","clearContentGroup","contentGroup","getPlainTextWithPsuedoSemantics","textAncestor","clonedTextAncestor","tag","tagName","toUpperCase","createTextNode","arr","textContent","split","join","utteranceEnd","shift","enhancedText","init","selectors","synthesis","isEnabled","currentUtteranceIdentifier","dataset","ritmOptionalTrackingIdentifier","eventTracking","obj"],"mappings":"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"}