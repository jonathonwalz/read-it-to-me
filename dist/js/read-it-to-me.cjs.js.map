{"version":3,"file":"read-it-to-me.cjs.js","sources":["../../src/js/synthesis.js","../../src/js/group.js","../../src/js/events.js","../../src/js/utils.js","../../src/js/read-it-to-me.js","../../src/js/control-bar.js","../../src/js/dom.js","../../src/js/index.js"],"sourcesContent":["export function initSynthesis(synth, callback) {\n  let voices = [], failedToLoadVoices = false;\n\n  if (!synth && typeof speechSynthesis !== 'undefined') {\n    synth = speechSynthesis;\n  }\n\n  if (!synth) {\n    callback(new Error('Speech Synthesis is unavailable.'));\n    return;\n  }\n\n  let play = (config, callback = () => {}) => {\n    const u = new SpeechSynthesisUtterance(config.text);\n    u.lang = 'en-US';\n    u.rate = .8;\n    //if voices is populated and the 'Samantha' voice is present on the browser/device, load her up, otherwise don't set a voice so the default is allowed to do it's thing.\n    if (voices.length > 0) {\n      for (let i = 0; i < voices.length; i++) {\n        if (voices[i].lang.indexOf('en') === 0) {\n          if (voices[i].name === 'Samantha') {\n            u.voice = voices[i];\n            break;\n          }\n        }\n      }\n    }\n\n    function utteranceFinished(error) {\n      thisUtterance.finished = true;\n      result.currentUtterance = null;\n\n      setTimeout(() => callback(error, config), 100);\n    }\n\n    u.onend = () => utteranceFinished();\n\n    u.onerror = event => utteranceFinished(event);\n\n    const thisUtterance = result.currentUtterance = {u, config};\n\n    // speak the new utterance\n    synth.speak(u);\n  };\n\n  let pause = () => {\n    synth.pause();\n  };\n\n  let resume = () => {\n    synth.resume();\n  };\n\n  let cancel = () => {\n    synth.cancel();\n  };\n\n  const result = {play, pause, resume, cancel};\n\n  //populate voices [chrome currently will only do this in the context of the onvoiceschanged event]\n  voices = synth.getVoices();\n  if (voices.length === 0) {\n    if (synth.onvoiceschanged !== undefined) {\n      synth.onvoiceschanged = function () {\n        voices = synth.getVoices();\n        callback(null, result);\n      };\n    } else {\n      failedToLoadVoices = true;\n    }\n  }\n\n  // without this initial cancel, Chrome will pretty consistently fail to play the very first utterance (then works on every other utterance)\n  synth.cancel();\n\n  if (!voices.length && failedToLoadVoices) {\n    callback(new Error('Unable to load voice list'));\n  } else if (voices.length) {\n    callback(null, result);\n  }\n}\n","export const PLAYING_STATE = {\n  STOPPED: 0,\n  PAUSED: 1,\n  PLAYING: 2\n};\n\nexport function createRITMGroup({playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, ritmOptionalTrackingIdentifier, elem, text}, {wrapperElement, controlBubbleElement, document}) {\n  // Inner wrap each readable group in a new div.read-this-to-me\n  const wrapper = wrapperElement || document.createElement('div');\n  wrapper.classList.add('read-this-to-me');\n\n  if (!wrapperElement) {\n    elem.appendChild(wrapper);\n    while (elem.firstChild !== wrapper) {\n      wrapper.appendChild(elem.firstChild);\n    }\n  }\n\n  // build the control bubble\n  const controlBubble = controlBubbleElement || document.createElement('div');\n  controlBubble.classList.add('read-it-to-me-control-bubble');\n  controlBubble.tabIndex = -1;\n  controlBubble.innerHTML = '<p class=\"read-it-to-me-label\"></p><button type=\"button\" class=\"play-pause-resume\"></button><button type=\"button\" class=\"cancel-audio\"><span class=\"visually-hidden\">Cancel audio</a></button>';\n\n  const pausePlayButton = controlBubble.querySelector('button.play-pause-resume');\n  const cancelButton = controlBubble.querySelector('button.cancel-audio');\n\n  const focusInListener = e => {\n    // don't want this bubbling up from nested groups\n    e.stopPropagation();\n\n    elem.classList.add(focusClassName);\n  };\n\n  const focusOutListener = e => {\n    // don't want this bubbling up from nested groups\n    e.stopPropagation();\n\n    elem.classList.remove(focusClassName);\n  };\n\n  const playPauseListener = e => {\n    e.stopPropagation();\n    playPauseGroup(group);\n  };\n\n  const cancelListener = cancelAudio(controlBubble);\n\n  const setReadItToMe = enabled => {\n    if (enabled) {\n      elem.classList.remove(ritmDisabledClassName);\n    }\n    else {\n      elem.classList.add(ritmDisabledClassName);\n    }\n    pausePlayButton.disabled = !enabled;\n    cancelButton.disabled = !enabled;\n  };\n\n  const setState = state => {\n    group.state = state;\n\n    if (state === PLAYING_STATE.STOPPED) {\n      elem.classList.remove('read-it-to-me-play');\n      elem.classList.remove('read-it-to-me-pause');\n    } else if (state === PLAYING_STATE.PLAYING) {\n      elem.classList.add('read-it-to-me-play');\n      elem.classList.remove('read-it-to-me-pause');\n    } else if (state === PLAYING_STATE.PAUSED) {\n      elem.classList.remove('read-it-to-me-play');\n      elem.classList.add('read-it-to-me-pause');\n    }\n  };\n\n  const destroy = () => {\n    controlBubble.removeEventListener('focusin', focusInListener);\n    controlBubble.removeEventListener('focusout', focusOutListener);\n    pausePlayButton.removeEventListener('click', playPauseListener);\n    cancelButton.removeEventListener('click', cancelListener);\n  };\n\n  controlBubble.addEventListener('focusin', focusInListener);\n  controlBubble.addEventListener('focusout', focusOutListener);\n  pausePlayButton.addEventListener('click', playPauseListener);\n  cancelButton.addEventListener('click', cancelListener);\n\n  if (!controlBubbleElement) {\n    elem.insertBefore(controlBubble, wrapper);\n  }\n\n  const group = {\n    setReadItToMe,\n    setState,\n    state: PLAYING_STATE.STOPPED,\n    destroy,\n    text,\n    ritmOptionalTrackingIdentifier\n  };\n\n  return group;\n}","function nullEvent() {}\n\nfunction eventHandlerWrapper(handler) {\n  return event => {\n    try {\n      handler(event);\n    } catch (e) {}\n  };\n}\n\nexport function initEventTracking() {\n  const eventsBin = {\n    play: nullEvent,\n    pause: nullEvent,\n    cancel: nullEvent,\n    toggle: nullEvent\n  };\n\n  function setHandlers(obj) {\n    if (obj) {\n      if (obj.play && typeof obj.play === 'function') {\n        eventsBin.play = eventHandlerWrapper(obj.play);\n      }\n      if (obj.pause && typeof obj.pause === 'function') {\n        eventsBin.pause = eventHandlerWrapper(obj.pause);\n      }\n      if (obj.cancel && typeof obj.cancel === 'function') {\n        eventsBin.cancel = eventHandlerWrapper(obj.cancel);\n      }\n      if (obj.toggle && typeof obj.toggle === 'function') {\n        eventsBin.toggle = eventHandlerWrapper(obj.toggle);\n      }\n    }\n  }\n\n  return {eventsBin, setHandlers};\n}","export const ritmDisabledClassName = 'ritm-disabled';\nexport const groupClassName = 'read-it-to-me-content-group';\nexport const focusClassName = 'focusin';\n\nexport let getPlainTextWithPsuedoSemantics = (textAncestor) => {\n  // In a copy of the node list, pepper in (dramatically misuse, hehe) some punctuation for the purpose of adding meaningful pauses and 'emphasis' during text readout.\n  let clonedTextAncestor = textAncestor.cloneNode(true);\n  clonedTextAncestor.querySelectorAll('p, li, abbr, strong, em, h1, h2, h3, h4, h5, h6').forEach((elem) => {\n    let tag = elem.tagName.toUpperCase();\n    if (tag === 'P') {\n      elem.appendChild(document.createTextNode('. '));\n    }\n    else if (tag === \"ABBR\") {\n      let elemText = elem.textContent;\n      let arr = elemText.split('');\n      elem.textContent = arr.join('.');\n    }\n    else if (tag === 'STRONG' || tag === 'EM') {\n      elem.insertBefore(document.createTextNode(', '), elem.firstChild);\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'LI') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'H1' || tag === 'H2' || tag === 'H3' || tag === 'H4' || tag === 'H5' || tag === 'H6') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n  });\n\n  // return the modified text\n  return clonedTextAncestor.textContent;\n};","import {initSynthesis} from './synthesis';\nimport {PLAYING_STATE} from './group';\nimport {initEventTracking} from './events';\nimport {focusClassName} from './utils';\n\nlet synth;\nlet ui;\nlet nextGroup;\nlet ritmEnabled = true;\nconst {eventsBin, setHandlers} = initEventTracking();\n\nlet setup = (uiConfig) => {\n  ui = uiConfig;\n\n  // Toggle RITM off if set as disabled in sessionStorage\n  if (sessionStorage.getItem('readItToMeDisabled')) {\n    setReadItToMe(false);\n  }\n};\n\nlet clearStrayFocus = () => {\n  let strayFocus = document.querySelector(`.${focusClassName}`);\n  if (strayFocus) {\n    strayFocus.classList.remove(focusClassName);\n  }\n};\n\nlet setReadItToMe = (enabled, logEvent) => {\n  if (enabled) {\n    ritmEnabled = true;\n    sessionStorage.removeItem('readItToMeDisabled');\n  }\n  else {\n    ritmEnabled = false;\n    clearStrayFocus();\n    nextGroup = null;\n    synth.cancel();\n    sessionStorage.setItem('readItToMeDisabled', '1');\n  }\n\n  ui.setReadItToMe(ritmEnabled);\n\n  // optional track toggle event\n  if (logEvent) {\n    eventsBin.toggle(enabled);\n  }\n};\n\nlet cancelAudio = toFocus => function() {\n  // optional track cancel event\n  eventsBin.cancel();\n  // move focus to appropriate place, because the cancel button is about to disappear\n  if (toFocus.contains(this)) {\n    toFocus.focus();\n  }\n  cancel();\n};\n\nlet playPauseGroup = (group) => {\n  if (synth.currentUtterance && synth.currentUtterance.config.group === group && group.state !== PLAYING_STATE.STOPPED) {\n    if (group.state === PLAYING_STATE.PAUSED) {\n      resume();\n    } else if (group.state === PLAYING_STATE.PLAYING) {\n      pause();\n    }\n  } else {\n    nextGroup = group;\n    if (synth.currentUtterance) {\n      cancel();\n    } else {\n      play();\n    }\n  }\n};\n\nlet utteranceEnd = (e, config) => {\n  config.group.setState(PLAYING_STATE.STOPPED);\n\n  if (nextGroup) {\n    play();\n  } else {\n    ui.hideControlBar();\n    ui.hideCancelButton();\n  }\n};\n\nlet play = () => {\n  // setup the new utterance\n  const config = {text: nextGroup.text(), group: nextGroup};\n  nextGroup.setState(PLAYING_STATE.PLAYING);\n  nextGroup = null;\n\n  synth.play(config, utteranceEnd);\n  ui.showCancelButton();\n  ui.showControlBar();\n\n  // optional track play event\n  eventsBin.play();\n};\n\nlet pause = () => {\n  if (synth.currentUtterance) {\n    synth.pause();\n    synth.currentUtterance.config.group.setState(PLAYING_STATE.PAUSED);\n\n    // optional track pause event\n    eventsBin.pause();\n  }\n};\n\nlet resume = () => {\n  if (synth.currentUtterance) {\n    synth.resume();\n    synth.currentUtterance.config.group.setState(PLAYING_STATE.PLAYING);\n  }\n};\n\nlet cancel = () => {\n  ui.hideCancelButton();\n  synth.cancel();\n};\n\nexport function init(setupUI, callback) {\n  initSynthesis(undefined, (error, synthesis) => {\n    if (!error && synthesis) {\n      synth = synthesis;\n\n      const config = setupUI({playPauseGroup, cancelAudio, setReadItToMe});\n\n      if (!(config && config.hideControlBar && config.hideCancelButton && config.showCancelButton && config.showControlBar && config.setReadItToMe)) {\n        error = new Error('UI library did not provide necessary callbacks.');\n      } else {\n        setup(config);\n      }\n    }\n\n    callback(error);\n  });\n}\n\nexport function isEnabled () {\n  return ritmEnabled;\n}\n\nexport function currentUtteranceIdentifier() {\n  return (currentGroup && currentGroup.ritmOptionalTrackingIdentifier) || false;\n}\n\nexport const eventTracking = setHandlers;","export function createControlBar({cancelAudio, setReadItToMe}, {document, controlBarElement}) {\n  // build the control bar\n  const controlBar = controlBarElement || document.createElement('div');\n  controlBar.classList.add('read-it-to-me-control-bar');\n  controlBar.setAttribute('tabindex', '0');\n  controlBar.setAttribute('aria-describedby', 'ritm-sr-message');\n  controlBar.innerHTML = `<div class=\"toggle-wrapper\">\n                            <p class=\"visually-hidden\" id=\"ritm-sr-message\">Screen-reader users: there is a rudimentary \"on-demand\" read-aloud feature in use on this page called \"Read-it-to-Me\".  This new feature, which isn't meant as a screen-reader alternative, adds more tabable areas in the document which are great for keyboard users not using screen-readers, but are likely to be annoying for you. You can toggle off/on \"Read-it-to-Me\" using this checkbox.</p>\n                            <p class=\"read-it-to-me-label\">Toggle Read-it-to-Me</p>\n                            <label class=\"switch\" aria-label=\"Toggle Read-it-to-Me.\" aria-describedby=\"ritm-sr-message\">\n                              <input type=\"checkbox\" class=\"switch-input\" checked>\n                              <span class=\"switch-outline\"></span>\n                              <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\n                              <span class=\"switch-handle\"></span>\n                            </label>\n                          </div>\n                          <div class=\"cancel-audio-wrapper\">\n                            <button type=\"button\" class=\"btn btn-default btn-lg\">Cancel audio</button>\n                          </div>`;\n\n  const cancelButton = controlBar.querySelector('button');\n  const inputSwitch = controlBar.querySelector('input.switch-input');\n\n  const toggleReadItToMe = (e) => {\n    setReadItToMe(e.target.checked, true);\n  };\n\n  const setReadItToMeStatus = status => inputSwitch.checked = status;\n\n  const controlBarFocusIn = (e) => {\n    if (e.target && controlBar.contains(e.target)) {\n      if (!controlBar.classList.contains('control-bar-show')) {\n        showControlBar();\n      }\n    }\n  };\n\n  const controlBarFocusOut = (e) => {\n    if ((e.relatedTarget && !controlBar.contains(e.relatedTarget)) || !e.relatedTarget) {\n      hideControlBar();\n    }\n  };\n\n  const showCancelButton = () => {\n    controlBar.classList.add('show-ritm-cancel');\n  };\n\n  const hideCancelButton = () => {\n    controlBar.classList.remove('show-ritm-cancel');\n  };\n\n  const showControlBar = () => {\n    controlBar.classList.add('control-bar-show');\n  };\n\n  const hideControlBar = () => {\n    controlBar.classList.remove('control-bar-show');\n  };\n\n  cancelButton.addEventListener('click', cancelAudio(controlBar));\n  inputSwitch.addEventListener('change', toggleReadItToMe);\n  controlBar.addEventListener('focusin', controlBarFocusIn);\n  controlBar.addEventListener('focusout', controlBarFocusOut);\n\n  if (!controlBarElement) {\n    // append the control bar to body where it's least likely to be effected by layout styling and the control bubble so we can attach events to it.\n    let docBody = document.body;\n    docBody.insertBefore(controlBar, docBody.firstChild);\n  }\n\n  return {\n    showCancelButton,\n    hideCancelButton,\n    showControlBar,\n    hideControlBar,\n    setReadItToMe: setReadItToMeStatus\n  };\n}","import {createControlBar} from './control-bar';\nimport {createRITMGroup} from './group';\nimport {getPlainTextWithPsuedoSemantics, groupClassName, focusClassName, ritmDisabledClassName} from './utils';\n\nexport function init(initRITM, selectors) {\n  // If there's nothing to read, don't initialize\n  if (!((selectors && document.querySelectorAll(selectors).length > 0) || document.querySelectorAll(`.${groupClassName}`).length > 0)) {\n    return;\n  }\n\n  function setupUI({playPauseGroup, cancelAudio, setReadItToMe}) {\n    // if custom selectors were passed in, give the associated elements the default group class\n    if (selectors && document.querySelectorAll(selectors).length > 0) {\n      document.querySelectorAll(selectors).forEach((elem) => {\n        elem.classList.add(groupClassName);\n      });\n    }\n\n    let controlBar;\n    let contentGroups = [];\n\n    const groupSelectorElements = document.querySelectorAll(`.${groupClassName}`);\n    groupSelectorElements.forEach((elem) => {\n      const text = () => getPlainTextWithPsuedoSemantics(elem.querySelector('.read-this-to-me'));\n      const ritmOptionalTrackingIdentifier = elem.dataset.ritmOptionalTrackingIdentifier || false;\n      const group = createRITMGroup({playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, elem, ritmOptionalTrackingIdentifier, text}, {document});\n\n      contentGroups.push(group);\n    });\n\n    // build the control bar\n    controlBar = createControlBar({cancelAudio, setReadItToMe}, {document});\n\n    function uiSetReadItToMe(enabled) {\n      controlBar.setReadItToMe(enabled);\n      contentGroups.forEach(group => group.setReadItToMe(enabled));\n    }\n\n    return {\n      hideControlBar: controlBar.hideControlBar,\n      hideCancelButton: controlBar.hideCancelButton,\n      showCancelButton: controlBar.showCancelButton,\n      showControlBar: controlBar.showControlBar,\n      setReadItToMe: uiSetReadItToMe\n    }\n  }\n\n  initRITM(setupUI, error => {\n    if (error) {\n      // strip out classes that would apply ReadItToMe visuals\n      document.querySelectorAll(`.${groupClassName}`).forEach((elem) => {\n        elem.classList.remove(groupClassName, focusClassName);\n      });\n    }\n  });\n}","import '../scss/read-it-to-me.scss';\n\nimport * as ritm from './read-it-to-me';\nimport {init as domInit} from './dom';\n\nexport const initRITM = ritm.init;\nexport const isEnabled = ritm.isEnabled;\nexport const currentUtteranceIdentifier = ritm.currentUtteranceIdentifier;\nexport const eventTracking = ritm.eventTracking;\n\nexport function init(selectors) {\n  return domInit(ritm.init, selectors);\n}"],"names":["initSynthesis","synth","callback","voices","failedToLoadVoices","speechSynthesis","result","play","config","u","SpeechSynthesisUtterance","text","lang","rate","length","i","indexOf","name","voice","utteranceFinished","error","thisUtterance","finished","currentUtterance","setTimeout","onend","onerror","event","speak","pause","resume","cancel","getVoices","undefined","onvoiceschanged","Error","PLAYING_STATE","STOPPED","PAUSED","PLAYING","createRITMGroup","playPauseGroup","cancelAudio","focusClassName","ritmDisabledClassName","ritmOptionalTrackingIdentifier","elem","wrapperElement","controlBubbleElement","document","wrapper","createElement","classList","add","appendChild","firstChild","controlBubble","tabIndex","innerHTML","pausePlayButton","querySelector","cancelButton","focusInListener","e","stopPropagation","focusOutListener","remove","playPauseListener","group","cancelListener","addEventListener","insertBefore","setReadItToMe","enabled","disabled","setState","state","destroy","removeEventListener","nullEvent","eventHandlerWrapper","handler","initEventTracking","eventsBin","toggle","setHandlers","obj","ui","nextGroup","groupClassName","getPlainTextWithPsuedoSemantics","textAncestor","clonedTextAncestor","cloneNode","querySelectorAll","forEach","tag","tagName","toUpperCase","createTextNode","arr","textContent","split","join","ritmEnabled","setup","uiConfig","sessionStorage","getItem","clearStrayFocus","strayFocus","logEvent","removeItem","setItem","toFocus","contains","this","focus","utteranceEnd","hideControlBar","hideCancelButton","showCancelButton","showControlBar","init","setupUI","synthesis","isEnabled","currentUtteranceIdentifier","currentGroup","eventTracking","createControlBar","controlBarElement","controlBar","setAttribute","inputSwitch","target","checked","relatedTarget","docBody","body","status","initRITM","selectors","contentGroups","dataset","push","ritm","domInit"],"mappings":"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"}