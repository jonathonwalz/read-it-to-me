{"version":3,"file":"read-it-to-me.cjs.js","sources":["../../src/js/synthesis.js","../../src/js/control-bar.js","../../src/js/read-it-to-me.js","../../src/js/group.js"],"sourcesContent":["export function initSynthesis(synth, callback) {\n  let voices = [], failedToLoadVoices = false;\n\n  if (!synth && typeof speechSynthesis !== 'undefined') {\n    synth = speechSynthesis;\n  }\n\n  if (!synth) {\n    callback(new Error('Speech Synthesis is unavailable.'));\n    return;\n  }\n\n  let play = (config, callback = () => {}) => {\n    const u = new SpeechSynthesisUtterance(config.text);\n    u.lang = 'en-US';\n    u.rate = .8;\n    //if voices is populated and the 'Samantha' voice is present on the browser/device, load her up, otherwise don't set a voice so the default is allowed to do it's thing.\n    if (voices.length > 0) {\n      for (let i = 0; i < voices.length; i++) {\n        if (voices[i].lang.indexOf('en') === 0) {\n          if (voices[i].name === 'Samantha') {\n            u.voice = voices[i];\n            break;\n          }\n        }\n      }\n    }\n\n    u.onend = () => callback(null, config);\n\n    u.onerror = event => {\n      setTimeout(() => callback(event.error || new Error('Unknown speech synthesis error'), config), 100);\n    };\n\n    // speak the new utterance\n    synth.speak(u);\n  };\n\n  let pause = () => {\n    synth.pause();\n  };\n\n  let resume = () => {\n    synth.resume();\n  };\n\n  let cancel = () => {\n    synth.cancel();\n  };\n\n  const result = {play, pause, resume, cancel};\n\n  //populate voices [chrome currently will only do this in the context of the onvoiceschanged event]\n  voices = synth.getVoices();\n  if (voices.length === 0) {\n    if (synth.onvoiceschanged !== undefined) {\n      synth.onvoiceschanged = function () {\n        voices = synth.getVoices();\n        callback(null, result);\n      };\n    } else {\n      failedToLoadVoices = true;\n    }\n  }\n\n  // without this initial cancel, Chrome will pretty consistently fail to play the very first utterance (then works on every other utterance)\n  synth.cancel();\n\n  if (!voices.length && failedToLoadVoices) {\n    callback(new Error('Unable to load voice list'));\n  } else if (voices.length) {\n    callback(null, result);\n  }\n}\n","export function createControlBar({cancelAudio, setReadItToMe}, {document, controlBarElement}) {\n  // build the control bar\n  const controlBar = controlBarElement || document.createElement('div');\n  controlBar.classList.add('read-it-to-me-control-bar');\n  controlBar.setAttribute('tabindex', '0');\n  controlBar.setAttribute('aria-describedby', 'ritm-sr-message');\n  controlBar.innerHTML = `<div class=\"toggle-wrapper\">\n                            <p class=\"visually-hidden\" id=\"ritm-sr-message\">Screen-reader users: there is a rudimentary \"on-demand\" read-aloud feature in use on this page called \"Read-it-to-Me\".  This new feature, which isn't meant as a screen-reader alternative, adds more tabable areas in the document which are great for keyboard users not using screen-readers, but are likely to be annoying for you. You can toggle off/on \"Read-it-to-Me\" using this checkbox.</p>\n                            <p class=\"read-it-to-me-label\">Toggle Read-it-to-Me</p>\n                            <label class=\"switch\" aria-label=\"Toggle Read-it-to-Me.\" aria-describedby=\"ritm-sr-message\">\n                              <input type=\"checkbox\" class=\"switch-input\" checked>\n                              <span class=\"switch-outline\"></span>\n                              <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\n                              <span class=\"switch-handle\"></span>\n                            </label>\n                          </div>\n                          <div class=\"cancel-audio-wrapper\">\n                            <button type=\"button\" class=\"btn btn-default btn-lg\">Cancel audio</button>\n                          </div>`;\n\n  const cancelButton = controlBar.querySelector('button');\n  const inputSwitch = controlBar.querySelector('input.switch-input');\n\n  const toggleReadItToMe = (e) => {\n    setReadItToMe(e.target.checked, true);\n  };\n\n  const setReadItToMeStatus = status => inputSwitch.checked = status;\n\n  const controlBarFocusIn = (e) => {\n    if (e.target && controlBar.contains(e.target)) {\n      if (!controlBar.classList.contains('control-bar-show')) {\n        showControlBar();\n      }\n    }\n  };\n\n  const controlBarFocusOut = (e) => {\n    if ((e.relatedTarget && !controlBar.contains(e.relatedTarget)) || !e.relatedTarget) {\n      hideControlBar();\n    }\n  };\n\n  const showCancelButton = () => {\n    controlBar.classList.add('show-ritm-cancel');\n  };\n\n  const hideCancelButton = () => {\n    controlBar.classList.remove('show-ritm-cancel');\n  };\n\n  const showControlBar = () => {\n    controlBar.classList.add('control-bar-show');\n  };\n\n  const hideControlBar = () => {\n    controlBar.classList.remove('control-bar-show');\n  };\n\n  cancelButton.addEventListener('click', cancelAudio(controlBar));\n  inputSwitch.addEventListener('change', toggleReadItToMe);\n  controlBar.addEventListener('focusin', controlBarFocusIn);\n  controlBar.addEventListener('focusout', controlBarFocusOut);\n\n  if (!controlBarElement) {\n    // append the control bar to body where it's least likely to be effected by layout styling and the control bubble so we can attach events to it.\n    let docBody = document.body;\n    docBody.insertBefore(controlBar, docBody.firstChild);\n  }\n\n  return {\n    showCancelButton,\n    hideCancelButton,\n    showControlBar,\n    hideControlBar,\n    setReadItToMe: setReadItToMeStatus\n  };\n}","import '../scss/read-it-to-me.scss';\n\nimport {initSynthesis} from './synthesis';\nimport {createControlBar} from './control-bar';\nimport {createRITMGroup, PLAYING_STATE} from './group';\n\nlet synth;\nconst ritmDisabledClassName = 'ritm-disabled';\nconst groupClassName = 'read-it-to-me-content-group';\nconst focusClassName = 'focusin';\nlet controlBar;\nlet contentGroups = [];\nlet currentGroup;\nlet nextGroup;\nlet ritmEnabled = true;\nlet eventsBin = {\n  play: null,\n  pause: null,\n  cancel: null,\n  toggle: null\n};\n\nlet setup = () => {\n  addReadItToMeElements();\n\n  // Toggle RITM off if set as disabled in sessionStorage\n  if (sessionStorage.getItem('readItToMeDisabled')) {\n    setReadItToMe(false);\n  }\n};\n\nlet addReadItToMeElements = () => {\n  const groupSelectorElements = document.querySelectorAll(`.${groupClassName}`);\n  groupSelectorElements.forEach((elem) => {\n    const text = () => getPlainTextWithPsuedoSemantics(elem.querySelector('.read-this-to-me'));\n    const ritmOptionalTrackingIdentifier = elem.dataset.ritmOptionalTrackingIdentifier || false;\n    const group = createRITMGroup({playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, elem, ritmOptionalTrackingIdentifier, text}, {document});\n\n    contentGroups.push(group);\n  });\n\n  // build the control bar\n  controlBar = createControlBar({cancelAudio, setReadItToMe}, {document});\n};\n\nlet clearStrayFocus = () => {\n  let strayFocus = document.querySelector(`.${focusClassName}`);\n  if (strayFocus) {\n    strayFocus.classList.remove(focusClassName);\n  }\n};\n\nlet setReadItToMe = (enabled, logEvent) => {\n  if (enabled) {\n    ritmEnabled = true;\n    sessionStorage.removeItem('readItToMeDisabled');\n  }\n  else {\n    ritmEnabled = false;\n    clearStrayFocus();\n    nextGroup = null;\n    synth.cancel();\n    sessionStorage.setItem('readItToMeDisabled', '1');\n  }\n\n  controlBar.setReadItToMe(ritmEnabled);\n  contentGroups.forEach(group => group.setReadItToMe(ritmEnabled));\n\n  // optional track toggle event\n  if (logEvent && eventsBin.toggle) {\n    eventsBin.toggle(enabled);\n  }\n};\n\nlet cancelAudio = toFocus => function() {\n  // optional track cancel event\n  if (eventsBin.cancel) {\n    try {\n      eventsBin.cancel();\n    }\n    catch (e) {}\n  }\n  // move focus to appropriate place, because the cancel button is about to disappear\n  if (toFocus.contains(this)) {\n    toFocus.focus();\n  }\n  cancel();\n};\n\nlet playPauseGroup = (group) => {\n  if (currentGroup === group) {\n    if (group.state === PLAYING_STATE.STOPPED) {\n      // currentGroup === group and the group being stopped should never occur. But, just in case, we'll handle it\n      nextGroup = group;\n      utteranceEnd();\n    } else if (group.state === PLAYING_STATE.PAUSED) {\n      resume();\n    } else if (group.state === PLAYING_STATE.PLAYING) {\n      pause();\n    }\n  } else {\n    nextGroup = group;\n    if (currentGroup) {\n      cancel();\n    } else {\n      utteranceEnd();\n    }\n  }\n};\n\nlet getPlainTextWithPsuedoSemantics = (textAncestor) => {\n  // In a copy of the node list, pepper in (dramatically misuse, hehe) some punctuation for the purpose of adding meaningful pauses and 'emphasis' during text readout.\n  let clonedTextAncestor = textAncestor.cloneNode(true);\n  clonedTextAncestor.querySelectorAll('p, li, abbr, strong, em, h1, h2, h3, h4, h5, h6').forEach((elem) => {\n    let tag = elem.tagName.toUpperCase();\n    if (tag === 'P') {\n      elem.appendChild(document.createTextNode('. '));\n    }\n    else if (tag === \"ABBR\") {\n      let elemText = elem.textContent;\n      let arr = elemText.split('');\n      elem.textContent = arr.join('.');\n    }\n    else if (tag === 'STRONG' || tag === 'EM') {\n      elem.insertBefore(document.createTextNode(', '), elem.firstChild);\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'LI') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'H1' || tag === 'H2' || tag === 'H3' || tag === 'H4' || tag === 'H5' || tag === 'H6') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n  });\n\n  // return the modified text\n  return clonedTextAncestor.textContent;\n};\n\nlet utteranceEnd = () => {\n  if (currentGroup) {\n    currentGroup.setState(PLAYING_STATE.STOPPED);\n    currentGroup = null;\n    controlBar.hideControlBar();\n    controlBar.hideCancelButton();\n  }\n\n  if (nextGroup) {\n    currentGroup = nextGroup;\n    nextGroup = null;\n  }\n\n  if (currentGroup) {\n    play();\n  }\n};\n\nlet play = () => {\n  // setup the new utterance\n  let enhancedText = currentGroup.text();\n  synth.play({text: enhancedText}, utteranceEnd);\n  controlBar.showCancelButton();\n  controlBar.showControlBar();\n  currentGroup.setState(PLAYING_STATE.PLAYING);\n\n  // optional track play event\n  if (eventsBin.play) {\n    eventsBin.play();\n  }\n};\n\nlet pause = () => {\n  synth.pause();\n  currentGroup.setState(PLAYING_STATE.PAUSED);\n\n  // optional track pause event\n  if (eventsBin.pause) {\n    eventsBin.pause();\n  }\n};\n\nlet resume = () => {\n  synth.resume();\n  currentGroup.setState(PLAYING_STATE.PLAYING);\n};\n\nlet cancel = () => {\n  controlBar.hideCancelButton();\n  synth.cancel();\n};\n\nexport function init(selectors) {\n  // If there's nothing to read, don't initialize\n  if (!((selectors && document.querySelectorAll(selectors).length > 0) || document.querySelectorAll(`.${groupClassName}`).length > 0)) {\n    return;\n  }\n\n  initSynthesis(undefined, (error, synthesis) => {\n    if (!error && synthesis) {\n      synth = synthesis;\n\n      // if custom selectors were passed in, give the associated elements the default group class\n      if (selectors && document.querySelectorAll(selectors).length > 0) {\n        document.querySelectorAll(selectors).forEach((elem) => {\n          elem.classList.add(groupClassName);\n        });\n      }\n\n      setup();\n    }\n    else {\n      // strip out classes that would apply ReadItToMe visuals\n      document.querySelectorAll(`.${groupClassName}`).forEach((elem) => {\n        elem.classList.remove(groupClassName, focusClassName);\n      });\n    }\n  });\n}\n\nexport function isEnabled () {\n  return ritmEnabled;\n}\n\nexport function currentUtteranceIdentifier() {\n  return (currentGroup && currentGroup.ritmOptionalTrackingIdentifier) || false;\n}\n\nexport function eventTracking(obj) {\n  if (obj) {\n    if (obj.play && typeof obj.play === 'function') {\n      eventsBin.play = obj.play;\n    }\n    if (obj.pause && typeof obj.pause === 'function') {\n      eventsBin.pause = obj.pause;\n    }\n    if (obj.cancel && typeof obj.cancel === 'function') {\n      eventsBin.cancel = obj.cancel;\n    }\n    if (obj.toggle && typeof obj.toggle === 'function') {\n      eventsBin.toggle = obj.toggle;\n    }\n  }\n}","export const PLAYING_STATE = {\n  STOPPED: 0,\n  PAUSED: 1,\n  PLAYING: 2\n};\n\nexport function createRITMGroup({playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, ritmOptionalTrackingIdentifier, elem, text}, {wrapperElement, controlBubbleElement, document}) {\n  // Inner wrap each readable group in a new div.read-this-to-me\n  const wrapper = wrapperElement || document.createElement('div');\n  wrapper.classList.add('read-this-to-me');\n\n  if (!wrapperElement) {\n    elem.appendChild(wrapper);\n    while (elem.firstChild !== wrapper) {\n      wrapper.appendChild(elem.firstChild);\n    }\n  }\n\n  // build the control bubble\n  const controlBubble = controlBubbleElement || document.createElement('div');\n  controlBubble.classList.add('read-it-to-me-control-bubble');\n  controlBubble.tabIndex = -1;\n  controlBubble.innerHTML = '<p class=\"read-it-to-me-label\"></p><button type=\"button\" class=\"play-pause-resume\"></button><button type=\"button\" class=\"cancel-audio\"><span class=\"visually-hidden\">Cancel audio</a></button>';\n\n  const pausePlayButton = controlBubble.querySelector('button.play-pause-resume');\n  const cancelButton = controlBubble.querySelector('button.cancel-audio');\n\n  const focusInListener = e => {\n    // don't want this bubbling up from nested groups\n    e.stopPropagation();\n\n    elem.classList.add(focusClassName);\n  };\n\n  const focusOutListener = e => {\n    // don't want this bubbling up from nested groups\n    e.stopPropagation();\n\n    elem.classList.remove(focusClassName);\n  };\n\n  const playPauseListener = e => {\n    e.stopPropagation();\n    playPauseGroup(group);\n  };\n\n  const cancelListener = cancelAudio(controlBubble);\n\n  const setReadItToMe = enabled => {\n    if (enabled) {\n      elem.classList.remove(ritmDisabledClassName);\n    }\n    else {\n      elem.classList.add(ritmDisabledClassName);\n    }\n    pausePlayButton.disabled = !enabled;\n    cancelButton.disabled = !enabled;\n  };\n\n  const setState = state => {\n    group.state = state;\n\n    if (state === PLAYING_STATE.STOPPED) {\n      elem.classList.remove('read-it-to-me-play');\n      elem.classList.remove('read-it-to-me-pause');\n    } else if (state === PLAYING_STATE.PLAYING) {\n      elem.classList.add('read-it-to-me-play');\n      elem.classList.remove('read-it-to-me-pause');\n    } else if (state === PLAYING_STATE.PAUSED) {\n      elem.classList.remove('read-it-to-me-play');\n      elem.classList.add('read-it-to-me-pause');\n    }\n  };\n\n  const destroy = () => {\n    controlBubble.removeEventListener('focusin', focusInListener);\n    controlBubble.removeEventListener('focusout', focusOutListener);\n    pausePlayButton.removeEventListener('click', playPauseListener);\n    cancelButton.removeEventListener('click', cancelListener);\n  };\n\n  controlBubble.addEventListener('focusin', focusInListener);\n  controlBubble.addEventListener('focusout', focusOutListener);\n  pausePlayButton.addEventListener('click', playPauseListener);\n  cancelButton.addEventListener('click', cancelListener);\n\n  if (!controlBubbleElement) {\n    elem.insertBefore(controlBubble, wrapper);\n  }\n\n  const group = {\n    setReadItToMe,\n    setState,\n    state: PLAYING_STATE.STOPPED,\n    destroy,\n    text\n  };\n\n  return group;\n}"],"names":["initSynthesis","synth","callback","voices","failedToLoadVoices","speechSynthesis","result","play","config","u","SpeechSynthesisUtterance","text","lang","rate","length","i","indexOf","name","voice","onend","onerror","event","setTimeout","error","Error","speak","pause","resume","cancel","getVoices","undefined","onvoiceschanged","createControlBar","cancelAudio","setReadItToMe","document","controlBarElement","controlBar","createElement","classList","add","setAttribute","innerHTML","cancelButton","querySelector","inputSwitch","showControlBar","hideControlBar","remove","addEventListener","e","target","checked","contains","relatedTarget","docBody","body","insertBefore","firstChild","showCancelButton","hideCancelButton","status","PLAYING_STATE","STOPPED","PAUSED","PLAYING","createRITMGroup","playPauseGroup","focusClassName","ritmDisabledClassName","elem","ritmOptionalTrackingIdentifier","wrapperElement","controlBubbleElement","wrapper","appendChild","controlBubble","tabIndex","pausePlayButton","focusInListener","stopPropagation","focusOutListener","playPauseListener","group","cancelListener","enabled","disabled","setState","state","destroy","removeEventListener","currentGroup","nextGroup","groupClassName","contentGroups","ritmEnabled","eventsBin","toggle","setup","addReadItToMeElements","sessionStorage","getItem","querySelectorAll","forEach","dataset","getPlainTextWithPsuedoSemantics","push","clearStrayFocus","strayFocus","logEvent","removeItem","setItem","toFocus","this","focus","utteranceEnd","textAncestor","clonedTextAncestor","cloneNode","tag","tagName","toUpperCase","createTextNode","arr","textContent","split","join","enhancedText","init","selectors","synthesis","isEnabled","currentUtteranceIdentifier","eventTracking","obj"],"mappings":"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"}