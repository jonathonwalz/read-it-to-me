{"version":3,"file":"read-it-to-me.cjs.js","sources":["../../src/js/utils.js","../../src/js/read-it-to-me.js","../../src/js/synthesis.js","../../src/js/events.js","../../src/js/control-bar.js","../../src/js/group.js","../../src/js/dom.js","../../src/js/index.js"],"sourcesContent":["export const ritmDisabledClassName = 'ritm-disabled';\nexport const groupClassName = 'read-it-to-me-content-group';\nexport const focusClassName = 'focusin';\n\nexport const PLAYING_STATE = {\n  STOPPED: 0,\n  PAUSED: 1,\n  PLAYING: 2\n};\n\nexport let getPlainTextWithPsuedoSemantics = (textAncestor) => {\n  // In a copy of the node list, pepper in (dramatically misuse, hehe) some punctuation for the purpose of adding meaningful pauses and 'emphasis' during text readout.\n  let clonedTextAncestor = textAncestor.cloneNode(true);\n  clonedTextAncestor.querySelectorAll('p, li, abbr, strong, em, h1, h2, h3, h4, h5, h6').forEach((elem) => {\n    let tag = elem.tagName.toUpperCase();\n    if (tag === 'P') {\n      elem.appendChild(document.createTextNode('. '));\n    }\n    else if (tag === \"ABBR\") {\n      let elemText = elem.textContent;\n      let arr = elemText.split('');\n      elem.textContent = arr.join('.');\n    }\n    else if (tag === 'STRONG' || tag === 'EM') {\n      elem.insertBefore(document.createTextNode(', '), elem.firstChild);\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'LI') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'H1' || tag === 'H2' || tag === 'H3' || tag === 'H4' || tag === 'H5' || tag === 'H6') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n  });\n\n  // return the modified text\n  return clonedTextAncestor.textContent;\n};","import {initSynthesis} from './synthesis';\nimport {initEventTracking} from './events';\nimport {PLAYING_STATE, focusClassName} from './utils';\n\nlet synth;\nlet ui;\nlet ritmEnabled = true;\nconst {eventsBin, setHandlers} = initEventTracking();\n\nlet setup = (uiConfig) => {\n  ui = uiConfig;\n\n  // Toggle RITM off if set as disabled in sessionStorage\n  if (sessionStorage.getItem('readItToMeDisabled')) {\n    setReadItToMe(false);\n  }\n};\n\nlet clearStrayFocus = () => {\n  let strayFocus = document.querySelector(`.${focusClassName}`);\n  if (strayFocus) {\n    strayFocus.classList.remove(focusClassName);\n  }\n};\n\nlet setReadItToMe = (enabled, logEvent) => {\n  if (enabled) {\n    ritmEnabled = true;\n    sessionStorage.removeItem('readItToMeDisabled');\n  }\n  else {\n    ritmEnabled = false;\n    clearStrayFocus();\n    synth.cancel();\n    sessionStorage.setItem('readItToMeDisabled', '1');\n  }\n\n  ui.setReadItToMe(ritmEnabled);\n\n  // optional track toggle event\n  if (logEvent) {\n    eventsBin.toggle(enabled);\n  }\n};\n\nlet cancelAudio = toFocus => function() {\n  // optional track cancel event\n  eventsBin.cancel();\n  // move focus to appropriate place, because the cancel button is about to disappear\n  if (toFocus.contains(this)) {\n    toFocus.focus();\n  }\n  synth.cancel();\n};\n\nlet playPauseGroup = (group) => {\n  if (synth.currentUtterance && synth.currentUtterance.config.group === group && group.state !== PLAYING_STATE.STOPPED) {\n    if (group.state === PLAYING_STATE.PAUSED) {\n      synth.resume();\n    } else if (group.state === PLAYING_STATE.PLAYING) {\n      synth.pause();\n    }\n  } else {\n    // setup the new utterance\n    const config = {text: group.text(), group, playTracked: false};\n\n    synth.play(config, utteranceUpdated);\n  }\n};\n\nlet utteranceUpdated = (e, state, config) => {\n  config.group.setState(state);\n\n  if (state === PLAYING_STATE.STOPPED) {\n    ui.hideControlBar();\n    ui.hideCancelButton();\n  } else {\n    ui.showControlBar();\n    ui.showCancelButton();\n  }\n\n  if (state === PLAYING_STATE.PLAYING) {\n    if (!config.playTracked) {\n      eventsBin.play();\n      config.playTracked = true;\n    }\n  } else if (state === PLAYING_STATE.PAUSED) {\n    eventsBin.pause();\n  }\n};\n\nexport function init(setupUI, callback) {\n  initSynthesis(undefined, (error, synthesis) => {\n    if (!error && synthesis) {\n      synth = synthesis;\n\n      const config = setupUI({playPauseGroup, cancelAudio, setReadItToMe});\n\n      if (!(config && config.hideControlBar && config.hideCancelButton && config.showCancelButton && config.showControlBar && config.setReadItToMe)) {\n        error = new Error('UI library did not provide necessary callbacks.');\n      } else {\n        setup(config);\n      }\n    }\n\n    callback(error);\n  });\n}\n\nexport function isEnabled () {\n  return ritmEnabled;\n}\n\nexport function currentUtteranceIdentifier() {\n  return (synth.currentUtterance && synth.currentUtterance.config.group.ritmOptionalTrackingIdentifier) || false;\n}\n\nexport const eventTracking = setHandlers;","import {PLAYING_STATE} from './utils';\n\nexport function initSynthesis(synth, callback) {\n  let voices = [], failedToLoadVoices = false;\n\n  if (!synth && typeof speechSynthesis !== 'undefined') {\n    synth = speechSynthesis;\n  }\n\n  if (!synth) {\n    callback(new Error('Speech Synthesis is unavailable.'));\n    return;\n  }\n\n  let play = (config, callback = () => {}) => {\n    const u = new SpeechSynthesisUtterance(config.text);\n    u.lang = 'en-US';\n    u.rate = .8;\n    //if voices is populated and the 'Samantha' voice is present on the browser/device, load her up, otherwise don't set a voice so the default is allowed to do it's thing.\n    if (voices.length > 0) {\n      for (let i = 0; i < voices.length; i++) {\n        if (voices[i].lang.indexOf('en') === 0) {\n          if (voices[i].name === 'Samantha') {\n            u.voice = voices[i];\n            break;\n          }\n        }\n      }\n    }\n\n    result.nextUttarance = {u, config, callback};\n\n    if (!result.currentUtterance) {\n      playNextUtterance();\n    } else {\n      synth.cancel();\n    }\n  };\n\n  let playNextUtterance = () => {\n    const thisUtterance = result.currentUtterance = result.nextUttarance;\n    result.nextUttarance = null;\n\n    function utteranceFinished(error) {\n      thisUtterance.callback(error, PLAYING_STATE.STOPPED, thisUtterance.config);\n      if (result.nextUttarance) {\n        playNextUtterance();\n      } else {\n        result.currentUtterance = null;\n      }\n    }\n\n    thisUtterance.u.onend = () => setTimeout(utteranceFinished, 100);\n\n    thisUtterance.u.onerror = event => setTimeout(utteranceFinished.bind(null, event.error || new Error('Unknown speech synthesis error')), 100);\n\n    thisUtterance.u.onstart = () => thisUtterance.callback(null, PLAYING_STATE.PLAYING, thisUtterance.config);\n\n    thisUtterance.u.onpause = () => thisUtterance.callback(null, PLAYING_STATE.PAUSED, thisUtterance.config);\n\n    thisUtterance.u.onresume = () => thisUtterance.callback(null, PLAYING_STATE.PLAYING, thisUtterance.config);\n\n    // speak the new utterance\n    synth.speak(thisUtterance.u);\n  };\n\n  let pause = () => {\n    synth.pause();\n  };\n\n  let resume = () => {\n    synth.resume();\n  };\n\n  let cancel = () => {\n    synth.cancel();\n  };\n\n  const result = {play, pause, resume, cancel};\n\n  //populate voices [chrome currently will only do this in the context of the onvoiceschanged event]\n  voices = synth.getVoices();\n  if (voices.length === 0) {\n    if (synth.onvoiceschanged !== undefined) {\n      synth.onvoiceschanged = function () {\n        voices = synth.getVoices();\n        callback(null, result);\n      };\n    } else {\n      failedToLoadVoices = true;\n    }\n  }\n\n  // without this initial cancel, Chrome will pretty consistently fail to play the very first utterance (then works on every other utterance)\n  synth.cancel();\n\n  if (!voices.length && failedToLoadVoices) {\n    callback(new Error('Unable to load voice list'));\n  } else if (voices.length) {\n    callback(null, result);\n  }\n}\n","function nullEvent() {}\n\nfunction eventHandlerWrapper(handler) {\n  return event => {\n    try {\n      handler(event);\n    } catch (e) {}\n  };\n}\n\nexport function initEventTracking() {\n  const eventsBin = {\n    play: nullEvent,\n    pause: nullEvent,\n    cancel: nullEvent,\n    toggle: nullEvent\n  };\n\n  function setHandlers(obj) {\n    if (obj) {\n      if (obj.play && typeof obj.play === 'function') {\n        eventsBin.play = eventHandlerWrapper(obj.play);\n      }\n      if (obj.pause && typeof obj.pause === 'function') {\n        eventsBin.pause = eventHandlerWrapper(obj.pause);\n      }\n      if (obj.cancel && typeof obj.cancel === 'function') {\n        eventsBin.cancel = eventHandlerWrapper(obj.cancel);\n      }\n      if (obj.toggle && typeof obj.toggle === 'function') {\n        eventsBin.toggle = eventHandlerWrapper(obj.toggle);\n      }\n    }\n  }\n\n  return {eventsBin, setHandlers};\n}","export function createControlBar({cancelAudio, setReadItToMe}, {document, controlBarElement}) {\n  // build the control bar\n  const controlBar = controlBarElement || document.createElement('div');\n  controlBar.classList.add('read-it-to-me-control-bar');\n  controlBar.setAttribute('tabindex', '0');\n  controlBar.setAttribute('aria-describedby', 'ritm-sr-message');\n  controlBar.innerHTML = `<div class=\"toggle-wrapper\">\n                            <p class=\"visually-hidden\" id=\"ritm-sr-message\">Screen-reader users: there is a rudimentary \"on-demand\" read-aloud feature in use on this page called \"Read-it-to-Me\".  This new feature, which isn't meant as a screen-reader alternative, adds more tabable areas in the document which are great for keyboard users not using screen-readers, but are likely to be annoying for you. You can toggle off/on \"Read-it-to-Me\" using this checkbox.</p>\n                            <p class=\"read-it-to-me-label\">Toggle Read-it-to-Me</p>\n                            <label class=\"switch\" aria-label=\"Toggle Read-it-to-Me.\" aria-describedby=\"ritm-sr-message\">\n                              <input type=\"checkbox\" class=\"switch-input\" checked>\n                              <span class=\"switch-outline\"></span>\n                              <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\n                              <span class=\"switch-handle\"></span>\n                            </label>\n                          </div>\n                          <div class=\"cancel-audio-wrapper\">\n                            <button type=\"button\" class=\"btn btn-default btn-lg\">Cancel audio</button>\n                          </div>`;\n\n  const cancelButton = controlBar.querySelector('button');\n  const inputSwitch = controlBar.querySelector('input.switch-input');\n\n  const toggleReadItToMe = (e) => {\n    setReadItToMe(e.target.checked, true);\n  };\n\n  const setReadItToMeStatus = status => inputSwitch.checked = status;\n\n  const controlBarFocusIn = (e) => {\n    if (e.target && controlBar.contains(e.target)) {\n      if (!controlBar.classList.contains('control-bar-show')) {\n        showControlBar();\n      }\n    }\n  };\n\n  const controlBarFocusOut = (e) => {\n    if ((e.relatedTarget && !controlBar.contains(e.relatedTarget)) || !e.relatedTarget) {\n      hideControlBar();\n    }\n  };\n\n  const showCancelButton = () => {\n    controlBar.classList.add('show-ritm-cancel');\n  };\n\n  const hideCancelButton = () => {\n    controlBar.classList.remove('show-ritm-cancel');\n  };\n\n  const showControlBar = () => {\n    controlBar.classList.add('control-bar-show');\n  };\n\n  const hideControlBar = () => {\n    controlBar.classList.remove('control-bar-show');\n  };\n\n  cancelButton.addEventListener('click', cancelAudio(controlBar));\n  inputSwitch.addEventListener('change', toggleReadItToMe);\n  controlBar.addEventListener('focusin', controlBarFocusIn);\n  controlBar.addEventListener('focusout', controlBarFocusOut);\n\n  if (!controlBarElement) {\n    // append the control bar to body where it's least likely to be effected by layout styling and the control bubble so we can attach events to it.\n    let docBody = document.body;\n    docBody.insertBefore(controlBar, docBody.firstChild);\n  }\n\n  return {\n    showCancelButton,\n    hideCancelButton,\n    showControlBar,\n    hideControlBar,\n    setReadItToMe: setReadItToMeStatus\n  };\n}","import {PLAYING_STATE} from './utils';\n\nexport function createRITMGroup({playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, ritmOptionalTrackingIdentifier, elem, text}, {wrapperElement, controlBubbleElement, document}) {\n  // Inner wrap each readable group in a new div.read-this-to-me\n  const wrapper = wrapperElement || document.createElement('div');\n  wrapper.classList.add('read-this-to-me');\n\n  if (!wrapperElement) {\n    elem.appendChild(wrapper);\n    while (elem.firstChild !== wrapper) {\n      wrapper.appendChild(elem.firstChild);\n    }\n  }\n\n  // build the control bubble\n  const controlBubble = controlBubbleElement || document.createElement('div');\n  controlBubble.classList.add('read-it-to-me-control-bubble');\n  controlBubble.tabIndex = -1;\n  controlBubble.innerHTML = '<p class=\"read-it-to-me-label\"></p><button type=\"button\" class=\"play-pause-resume\"></button><button type=\"button\" class=\"cancel-audio\"><span class=\"visually-hidden\">Cancel audio</a></button>';\n\n  const pausePlayButton = controlBubble.querySelector('button.play-pause-resume');\n  const cancelButton = controlBubble.querySelector('button.cancel-audio');\n\n  const focusInListener = e => {\n    // don't want this bubbling up from nested groups\n    e.stopPropagation();\n\n    elem.classList.add(focusClassName);\n  };\n\n  const focusOutListener = e => {\n    // don't want this bubbling up from nested groups\n    e.stopPropagation();\n\n    elem.classList.remove(focusClassName);\n  };\n\n  const playPauseListener = e => {\n    e.stopPropagation();\n    playPauseGroup(group);\n  };\n\n  const cancelListener = cancelAudio(controlBubble);\n\n  const setReadItToMe = enabled => {\n    if (enabled) {\n      elem.classList.remove(ritmDisabledClassName);\n    }\n    else {\n      elem.classList.add(ritmDisabledClassName);\n    }\n    pausePlayButton.disabled = !enabled;\n    cancelButton.disabled = !enabled;\n  };\n\n  const setState = state => {\n    group.state = state;\n\n    if (state === PLAYING_STATE.STOPPED) {\n      elem.classList.remove('read-it-to-me-play');\n      elem.classList.remove('read-it-to-me-pause');\n    } else if (state === PLAYING_STATE.PLAYING) {\n      elem.classList.add('read-it-to-me-play');\n      elem.classList.remove('read-it-to-me-pause');\n    } else if (state === PLAYING_STATE.PAUSED) {\n      elem.classList.remove('read-it-to-me-play');\n      elem.classList.add('read-it-to-me-pause');\n    }\n  };\n\n  const destroy = () => {\n    controlBubble.removeEventListener('focusin', focusInListener);\n    controlBubble.removeEventListener('focusout', focusOutListener);\n    pausePlayButton.removeEventListener('click', playPauseListener);\n    cancelButton.removeEventListener('click', cancelListener);\n  };\n\n  controlBubble.addEventListener('focusin', focusInListener);\n  controlBubble.addEventListener('focusout', focusOutListener);\n  pausePlayButton.addEventListener('click', playPauseListener);\n  cancelButton.addEventListener('click', cancelListener);\n\n  if (!controlBubbleElement) {\n    elem.insertBefore(controlBubble, wrapper);\n  }\n\n  const group = {\n    setReadItToMe,\n    setState,\n    state: PLAYING_STATE.STOPPED,\n    destroy,\n    text,\n    ritmOptionalTrackingIdentifier\n  };\n\n  return group;\n}","import {createControlBar} from './control-bar';\nimport {createRITMGroup} from './group';\nimport {getPlainTextWithPsuedoSemantics, groupClassName, focusClassName, ritmDisabledClassName} from './utils';\n\nexport function init(initRITM, selectors) {\n  // If there's nothing to read, don't initialize\n  if (!((selectors && document.querySelectorAll(selectors).length > 0) || document.querySelectorAll(`.${groupClassName}`).length > 0)) {\n    return;\n  }\n\n  function setupUI({playPauseGroup, cancelAudio, setReadItToMe}) {\n    // if custom selectors were passed in, give the associated elements the default group class\n    if (selectors && document.querySelectorAll(selectors).length > 0) {\n      document.querySelectorAll(selectors).forEach((elem) => {\n        elem.classList.add(groupClassName);\n      });\n    }\n\n    let controlBar;\n    let contentGroups = [];\n\n    const groupSelectorElements = document.querySelectorAll(`.${groupClassName}`);\n    groupSelectorElements.forEach((elem) => {\n      const text = () => getPlainTextWithPsuedoSemantics(elem.querySelector('.read-this-to-me'));\n      const ritmOptionalTrackingIdentifier = elem.dataset.ritmOptionalTrackingIdentifier || false;\n      const group = createRITMGroup({playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, elem, ritmOptionalTrackingIdentifier, text}, {document});\n\n      contentGroups.push(group);\n    });\n\n    // build the control bar\n    controlBar = createControlBar({cancelAudio, setReadItToMe}, {document});\n\n    function uiSetReadItToMe(enabled) {\n      controlBar.setReadItToMe(enabled);\n      contentGroups.forEach(group => group.setReadItToMe(enabled));\n    }\n\n    return {\n      hideControlBar: controlBar.hideControlBar,\n      hideCancelButton: controlBar.hideCancelButton,\n      showCancelButton: controlBar.showCancelButton,\n      showControlBar: controlBar.showControlBar,\n      setReadItToMe: uiSetReadItToMe\n    }\n  }\n\n  initRITM(setupUI, error => {\n    if (error) {\n      // strip out classes that would apply ReadItToMe visuals\n      document.querySelectorAll(`.${groupClassName}`).forEach((elem) => {\n        elem.classList.remove(groupClassName, focusClassName);\n      });\n    }\n  });\n}","import '../scss/read-it-to-me.scss';\n\nimport * as ritm from './read-it-to-me';\nimport {init as domInit} from './dom';\n\nexport const initRITM = ritm.init;\nexport const isEnabled = ritm.isEnabled;\nexport const currentUtteranceIdentifier = ritm.currentUtteranceIdentifier;\nexport const eventTracking = ritm.eventTracking;\n\nexport function init(selectors) {\n  return domInit(ritm.init, selectors);\n}"],"names":["synth","ui","ritmDisabledClassName","groupClassName","focusClassName","PLAYING_STATE","STOPPED","PAUSED","PLAYING","getPlainTextWithPsuedoSemantics","textAncestor","clonedTextAncestor","cloneNode","querySelectorAll","forEach","elem","tag","tagName","toUpperCase","appendChild","document","createTextNode","arr","textContent","split","join","insertBefore","firstChild","initSynthesis","callback","voices","failedToLoadVoices","speechSynthesis","playNextUtterance","thisUtterance","result","currentUtterance","nextUttarance","utteranceFinished","error","config","u","onend","setTimeout","onerror","event","bind","Error","onstart","onpause","onresume","speak","play","SpeechSynthesisUtterance","text","lang","rate","length","i","indexOf","name","voice","cancel","pause","resume","getVoices","undefined","onvoiceschanged","nullEvent","eventHandlerWrapper","handler","e","initEventTracking","eventsBin","toggle","setHandlers","obj","ritmEnabled","setup","uiConfig","sessionStorage","getItem","setReadItToMe","clearStrayFocus","strayFocus","querySelector","classList","remove","enabled","logEvent","removeItem","setItem","cancelAudio","toFocus","contains","this","focus","playPauseGroup","group","state","playTracked","utteranceUpdated","setState","hideControlBar","hideCancelButton","showControlBar","showCancelButton","init","setupUI","synthesis","isEnabled","currentUtteranceIdentifier","ritmOptionalTrackingIdentifier","eventTracking","createControlBar","controlBarElement","controlBar","createElement","add","setAttribute","innerHTML","cancelButton","inputSwitch","addEventListener","target","checked","relatedTarget","docBody","body","status","createRITMGroup","wrapperElement","controlBubbleElement","wrapper","controlBubble","tabIndex","pausePlayButton","focusInListener","stopPropagation","focusOutListener","playPauseListener","cancelListener","disabled","destroy","removeEventListener","initRITM","selectors","contentGroups","dataset","push","ritm","domInit"],"mappings":"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"}