{"version":3,"file":"read-it-to-me.esm.js","sources":["../../src/js/read-it-to-me.js","../../src/js/control-bar.js","../../src/js/synthesis.js"],"sourcesContent":["import '../scss/read-it-to-me.scss';\n\nimport {initSynthesis} from './synthesis';\nimport {createControlBar} from './control-bar';\n\nlet synth;\nconst ritmDisabledClassName = 'ritm-disabled';\nconst groupClassName = 'read-it-to-me-content-group';\nconst focusClassName = 'focusin';\nlet contentQueue = [];\nlet controlBar;\nlet ritmEnabled = true;\nlet eventsBin = {\n  play: null,\n  pause: null,\n  cancel: null,\n  toggle: null\n};\n\nlet setup = () => {\n  addReadItToMeElements();\n\n  // Toggle RITM off if set as disabled in sessionStorage\n  if (sessionStorage.getItem('readItToMeDisabled')) {\n    controlBar.controlBar.querySelector('input.switch-input').checked = false;\n    setReadItToMe(false);\n  }\n};\n\nlet addReadItToMeElements = () => {\n  // build the control bubble\n  const controlBubble = document.createElement('div');\n  controlBubble.classList.add('read-it-to-me-control-bubble');\n  controlBubble.tabIndex = -1;\n  controlBubble.innerHTML = '<p class=\"read-it-to-me-label\"></p><button type=\"button\" class=\"play-pause-resume\"></button><button type=\"button\" class=\"cancel-audio\"><span class=\"visually-hidden\">Cancel audio</a></button>';\n\n  const groupSelectorElements = document.querySelectorAll(`.${groupClassName}`);\n  // Inner wrap each readable group in a new div.read-this-to-me\n  const wrapSource = document.createElement('div');\n  wrapSource.classList.add('read-this-to-me');\n  groupSelectorElements.forEach((elem) => {\n    let wrapper = wrapSource.cloneNode(false);\n    elem.appendChild(wrapper);\n    while (elem.firstChild !== wrapper) {\n      wrapper.appendChild(elem.firstChild);\n    }\n\n    const clonedControlBubble = controlBubble.cloneNode(true);\n\n    clonedControlBubble.addEventListener('focusin', focusInListener(elem));\n    clonedControlBubble.addEventListener('focusout', focusOutListener(elem));\n    clonedControlBubble.querySelector('button.play-pause-resume').addEventListener('click', (e) => {\n      if (!ritmEnabled) {return false;}\n\n      e.stopPropagation();\n      let currentContentGroup = e.target.closest(`.${groupClassName}`);\n      contentGroupManager(currentContentGroup);\n    });\n    clonedControlBubble.querySelector('button.cancel-audio').addEventListener('click', cancelAudio(clonedControlBubble));\n\n    elem.insertBefore(clonedControlBubble, wrapper);\n  });\n\n  // build the control bar\n  controlBar = createControlBar({cancelAudio, setReadItToMe});\n\n  // append the control bar to body where it's least likely to be effected by layout styling and the control bubble so we can attach events to it.\n  let docBody = document.body;\n  docBody.insertBefore(controlBar.controlBar, docBody.firstChild);\n};\n\nlet clearStrayFocus = () => {\n  let strayFocus = document.querySelector(`.${focusClassName}`);\n  if (strayFocus) {\n    strayFocus.classList.remove(focusClassName);\n  }\n};\n\nconst focusInListener = elem => e => {\n  if (!ritmEnabled) {return false;}\n\n  // don't want this bubbling up from nested groups\n  e.stopPropagation();\n\n  elem.classList.add(focusClassName);\n};\n\nconst focusOutListener = elem => e => {\n  // don't want this bubbling up from nested groups\n  e.stopPropagation();\n\n  elem.classList.remove(focusClassName);\n};\n\nlet setReadItToMe = (enabled, logEvent) => {\n  let groupSelectorElements = document.querySelectorAll(`.${groupClassName}`);\n  if (enabled) {\n    ritmEnabled = true;\n    sessionStorage.removeItem('readItToMeDisabled');\n    groupSelectorElements.forEach((elem) => {\n      elem.classList.remove(ritmDisabledClassName);\n    });\n  }\n  else {\n    ritmEnabled = false;\n    clearStrayFocus();\n    synth.cancel();\n    sessionStorage.setItem('readItToMeDisabled', '1');\n    groupSelectorElements.forEach((elem) => {\n      elem.classList.add(ritmDisabledClassName);\n      if (!elem.classList.contains('ritm-do-not-strip-tabindex')) {\n        elem.removeAttribute('tabindex');\n      }\n    });\n  }\n\n  // optional track toggle event\n  if (logEvent && eventsBin.toggle) {\n    eventsBin.toggle(enabled);\n  }\n};\n\nlet cancelAudio = toFocus => function() {\n  // optional track cancel event\n  if (eventsBin.cancel) {\n    try {\n      eventsBin.cancel();\n    }\n    catch (e) {}\n  }\n  // move focus to appropriate place, because the cancel button is about to disappear\n  if (toFocus.contains(this)) {\n    toFocus.focus();\n  }\n  cancel();\n};\n\nlet contentGroupManager = (currentContentGroup) => {\n  if (!currentContentGroup.classList.contains('read-it-to-me-play') && !currentContentGroup.classList.contains('read-it-to-me-pause')) {\n    contentQueue.push(currentContentGroup);\n    if (document.querySelectorAll('.read-it-to-me-play').length > 0 || document.querySelectorAll('.read-it-to-me-pause').length > 0) {\n      cancel();\n    }\n    else {\n      play();\n    }\n    currentContentGroup.classList.toggle('read-it-to-me-play');\n  }\n  else if (currentContentGroup.classList.contains('read-it-to-me-play')) {\n    pause();\n    currentContentGroup.classList.toggle('read-it-to-me-play');\n    currentContentGroup.classList.toggle('read-it-to-me-pause');\n  }\n  else if (currentContentGroup.classList.contains('read-it-to-me-pause')) {\n    resume();\n    currentContentGroup.classList.toggle('read-it-to-me-play');\n    currentContentGroup.classList.toggle('read-it-to-me-pause');\n  }\n};\n\nlet clearContentGroup = (contentGroup) => {\n  contentGroup.classList.remove('read-it-to-me-play');\n  contentGroup.classList.remove('read-it-to-me-pause');\n};\n\nlet getPlainTextWithPsuedoSemantics = (textAncestor) => {\n  // In a copy of the node list, pepper in (dramatically misuse, hehe) some punctuation for the purpose of adding meaningful pauses and 'emphasis' during text readout.\n  let clonedTextAncestor = textAncestor.cloneNode(true);\n  clonedTextAncestor.querySelectorAll('p, li, abbr, strong, em, h1, h2, h3, h4, h5, h6').forEach((elem) => {\n    let tag = elem.tagName.toUpperCase();\n    if (tag === 'P') {\n      elem.appendChild(document.createTextNode('. '));\n    }\n    else if (tag === \"ABBR\") {\n      let elemText = elem.textContent;\n      let arr = elemText.split('');\n      elem.textContent = arr.join('.');\n    }\n    else if (tag === 'STRONG' || tag === 'EM') {\n      elem.insertBefore(document.createTextNode(', '), elem.firstChild);\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'LI') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'H1' || tag === 'H2' || tag === 'H3' || tag === 'H4' || tag === 'H5' || tag === 'H6') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n  });\n\n  // return the modified text\n  return clonedTextAncestor.textContent;\n};\n\nlet utteranceEnd = () => {\n  if (contentQueue.length > 0) {\n    clearContentGroup(contentQueue[0]);\n    controlBar.hideControlBar();\n    controlBar.hideCancelButton();\n    contentQueue.shift();\n  }\n  if (contentQueue.length > 0) {\n    play();\n  }\n};\n\nlet play = () => {\n  // setup the new utterance\n  let enhancedText = getPlainTextWithPsuedoSemantics(contentQueue[0].querySelector('.read-this-to-me'));\n  synth.play({text: enhancedText}, utteranceEnd);\n  controlBar.showCancelButton();\n  controlBar.showControlBar();\n\n  // optional track play event\n  if (eventsBin.play) {\n    eventsBin.play();\n  }\n};\n\nlet pause = () => {\n  synth.pause();\n\n  // optional track pause event\n  if (eventsBin.pause) {\n    eventsBin.pause();\n  }\n};\n\nlet resume = () => {\n  synth.resume();\n};\n\nlet cancel = () => {\n  controlBar.hideCancelButton();\n  synth.cancel();\n};\n\nexport function init(selectors) {\n  // If there's nothing to read, don't initialize\n  if (!((selectors && document.querySelectorAll(selectors).length > 0) || document.querySelectorAll(`.${groupClassName}`).length > 0)) {\n    return;\n  }\n\n  initSynthesis(undefined, (error, synthesis) => {\n    if (!error && synthesis) {\n      synth = synthesis;\n\n      // if custom selectors were passed in, give the associated elements the default group class\n      if (selectors && document.querySelectorAll(selectors).length > 0) {\n        document.querySelectorAll(selectors).forEach((elem) => {\n          elem.classList.add(groupClassName);\n        });\n      }\n\n      setup();\n    }\n    else {\n      // strip out classes that would apply ReadItToMe visuals\n      document.querySelectorAll(`.${groupClassName}`).forEach((elem) => {\n        elem.classList.remove(groupClassName, focusClassName);\n      });\n    }\n  });\n}\n\nexport function isEnabled () {\n  return ritmEnabled;\n}\n\nexport function currentUtteranceIdentifier() {\n  if (contentQueue[0] && contentQueue[0].dataset.ritmOptionalTrackingIdentifier && contentQueue[0].dataset.ritmOptionalTrackingIdentifier !== \"\") {\n    return contentQueue[0].dataset.ritmOptionalTrackingIdentifier;\n  }\n  return false;\n}\n\nexport function eventTracking(obj) {\n  if (obj) {\n    if (obj.play && typeof obj.play === 'function') {\n      eventsBin.play = obj.play;\n    }\n    if (obj.pause && typeof obj.pause === 'function') {\n      eventsBin.pause = obj.pause;\n    }\n    if (obj.cancel && typeof obj.cancel === 'function') {\n      eventsBin.cancel = obj.cancel;\n    }\n    if (obj.toggle && typeof obj.toggle === 'function') {\n      eventsBin.toggle = obj.toggle;\n    }\n  }\n}","export function createControlBar({cancelAudio, setReadItToMe}) {\n  // build the control bar\n  const controlBar = document.createElement('div');\n  controlBar.classList.add('read-it-to-me-control-bar');\n  controlBar.setAttribute('tabindex', '0');\n  controlBar.setAttribute('aria-describedby', 'ritm-sr-message');\n  controlBar.innerHTML = `<div class=\"toggle-wrapper\">\n                            <p class=\"visually-hidden\" id=\"ritm-sr-message\">Screen-reader users: there is a rudimentary \"on-demand\" read-aloud feature in use on this page called \"Read-it-to-Me\".  This new feature, which isn't meant as a screen-reader alternative, adds more tabable areas in the document which are great for keyboard users not using screen-readers, but are likely to be annoying for you. You can toggle off/on \"Read-it-to-Me\" using this checkbox.</p>\n                            <p class=\"read-it-to-me-label\">Toggle Read-it-to-Me</p>\n                            <label class=\"switch\" aria-label=\"Toggle Read-it-to-Me.\" aria-describedby=\"ritm-sr-message\">\n                              <input type=\"checkbox\" class=\"switch-input\" checked>\n                              <span class=\"switch-outline\"></span>\n                              <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\n                              <span class=\"switch-handle\"></span>\n                            </label>\n                          </div>\n                          <div class=\"cancel-audio-wrapper\">\n                            <button type=\"button\" class=\"btn btn-default btn-lg\">Cancel audio</button>\n                          </div>`;\n\n  let toggleReadItToMe = (e) => {\n    setReadItToMe(e.target.checked, true);\n  };\n\n  let controlBarFocusIn = (e) => {\n    if (e.target && controlBar.contains(e.target)) {\n      if (!controlBar.classList.contains('control-bar-show')) {\n        showControlBar();\n      }\n    }\n  };\n\n  let controlBarFocusOut = (e) => {\n    if ((e.relatedTarget && !controlBar.contains(e.relatedTarget)) || !e.relatedTarget) {\n      hideControlBar();\n    }\n  };\n\n  let showCancelButton = () => {\n    controlBar.classList.add('show-ritm-cancel');\n  };\n\n  let hideCancelButton = () => {\n    controlBar.classList.remove('show-ritm-cancel');\n  };\n\n  let showControlBar = () => {\n    controlBar.classList.add('control-bar-show');\n  };\n\n  let hideControlBar = () => {\n    controlBar.classList.remove('control-bar-show');\n  };\n\n  controlBar.querySelector('button').addEventListener('click', cancelAudio(controlBar));\n  controlBar.querySelector('input.switch-input').addEventListener('change', toggleReadItToMe);\n  controlBar.addEventListener('focusin', controlBarFocusIn);\n  controlBar.addEventListener('focusout', controlBarFocusOut);\n\n  return {\n    controlBar,\n    showCancelButton,\n    hideCancelButton,\n    showControlBar,\n    hideControlBar\n  };\n}","export function initSynthesis(synth, callback) {\n  let voices = [], failedToLoadVoices = false;\n\n  if (!synth && typeof speechSynthesis !== 'undefined') {\n    synth = speechSynthesis;\n  }\n\n  if (!synth) {\n    callback(new Error('Speech Synthesis is unavailable.'));\n    return;\n  }\n\n  let play = (config, callback = () => {}) => {\n    const u = new SpeechSynthesisUtterance(config.text);\n    u.lang = 'en-US';\n    u.rate = .8;\n    //if voices is populated and the 'Samantha' voice is present on the browser/device, load her up, otherwise don't set a voice so the default is allowed to do it's thing.\n    if (voices.length > 0) {\n      for (let i = 0; i < voices.length; i++) {\n        if (voices[i].lang.indexOf('en') === 0) {\n          if (voices[i].name === 'Samantha') {\n            u.voice = voices[i];\n            break;\n          }\n        }\n      }\n    }\n\n    u.onend = () => callback(null, config);\n\n    u.onerror = event => {\n      setTimeout(() => callback(event.error || new Error('Unknown speech synthesis error'), config), 100);\n    };\n\n    // speak the new utterance\n    synth.speak(u);\n  };\n\n  let pause = () => {\n    synth.pause();\n  };\n\n  let resume = () => {\n    synth.resume();\n  };\n\n  let cancel = () => {\n    synth.cancel();\n  };\n\n  const result = {play, pause, resume, cancel};\n\n  //populate voices [chrome currently will only do this in the context of the onvoiceschanged event]\n  voices = synth.getVoices();\n  if (voices.length === 0) {\n    if (synth.onvoiceschanged !== undefined) {\n      synth.onvoiceschanged = function () {\n        voices = synth.getVoices();\n        callback(null, result);\n      };\n    } else {\n      failedToLoadVoices = true;\n    }\n  }\n\n  // without this initial cancel, Chrome will pretty consistently fail to play the very first utterance (then works on every other utterance)\n  synth.cancel();\n\n  if (!voices.length && failedToLoadVoices) {\n    callback(new Error('Unable to load voice list'));\n  } else if (voices.length) {\n    callback(null, result);\n  }\n}\n"],"names":["synth","controlBar","groupClassName","focusClassName","contentQueue","ritmEnabled","eventsBin","play","pause","cancel","toggle","setup","addReadItToMeElements","sessionStorage","getItem","querySelector","checked","setReadItToMe","controlBubble","document","createElement","classList","add","tabIndex","innerHTML","groupSelectorElements","querySelectorAll","wrapSource","forEach","elem","wrapper","cloneNode","appendChild","firstChild","clonedControlBubble","addEventListener","focusInListener","focusOutListener","e","stopPropagation","currentContentGroup","target","closest","contentGroupManager","cancelAudio","insertBefore","setAttribute","showControlBar","hideControlBar","remove","contains","relatedTarget","showCancelButton","hideCancelButton","createControlBar","docBody","body","enabled","logEvent","strayFocus","removeItem","setItem","removeAttribute","toFocus","this","focus","resume","push","length","utteranceEnd","contentGroup","shift","textAncestor","clonedTextAncestor","enhancedText","tag","tagName","toUpperCase","createTextNode","arr","textContent","split","join","text","init","selectors","callback","voices","failedToLoadVoices","speechSynthesis","result","config","u","SpeechSynthesisUtterance","lang","rate","i","indexOf","name","voice","onend","onerror","event","setTimeout","error","Error","speak","getVoices","undefined","onvoiceschanged","initSynthesis","synthesis","isEnabled","currentUtteranceIdentifier","dataset","ritmOptionalTrackingIdentifier","eventTracking","obj"],"mappings":"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"}