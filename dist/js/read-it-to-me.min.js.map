{"version":3,"file":"read-it-to-me.min.js","sources":["../../src/js/read-it-to-me.js","../../src/js/group.js","../../src/js/events.js","../../src/js/control-bar.js","../../src/js/synthesis.js"],"sourcesContent":["import '../scss/read-it-to-me.scss';\n\nimport {initSynthesis} from './synthesis';\nimport {createControlBar} from './control-bar';\nimport {createRITMGroup, PLAYING_STATE} from './group';\nimport {initEventTracking} from './events';\n\nlet synth;\nconst ritmDisabledClassName = 'ritm-disabled';\nconst groupClassName = 'read-it-to-me-content-group';\nconst focusClassName = 'focusin';\nlet controlBar;\nlet contentGroups = [];\nlet currentGroup;\nlet nextGroup;\nlet ritmEnabled = true;\nconst {eventsBin, setHandlers} = initEventTracking();\n\nlet setup = () => {\n  addReadItToMeElements();\n\n  // Toggle RITM off if set as disabled in sessionStorage\n  if (sessionStorage.getItem('readItToMeDisabled')) {\n    setReadItToMe(false);\n  }\n};\n\nlet addReadItToMeElements = () => {\n  const groupSelectorElements = document.querySelectorAll(`.${groupClassName}`);\n  groupSelectorElements.forEach((elem) => {\n    const text = () => getPlainTextWithPsuedoSemantics(elem.querySelector('.read-this-to-me'));\n    const ritmOptionalTrackingIdentifier = elem.dataset.ritmOptionalTrackingIdentifier || false;\n    const group = createRITMGroup({playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, elem, ritmOptionalTrackingIdentifier, text}, {document});\n\n    contentGroups.push(group);\n  });\n\n  // build the control bar\n  controlBar = createControlBar({cancelAudio, setReadItToMe}, {document});\n};\n\nlet clearStrayFocus = () => {\n  let strayFocus = document.querySelector(`.${focusClassName}`);\n  if (strayFocus) {\n    strayFocus.classList.remove(focusClassName);\n  }\n};\n\nlet setReadItToMe = (enabled, logEvent) => {\n  if (enabled) {\n    ritmEnabled = true;\n    sessionStorage.removeItem('readItToMeDisabled');\n  }\n  else {\n    ritmEnabled = false;\n    clearStrayFocus();\n    nextGroup = null;\n    synth.cancel();\n    sessionStorage.setItem('readItToMeDisabled', '1');\n  }\n\n  controlBar.setReadItToMe(ritmEnabled);\n  contentGroups.forEach(group => group.setReadItToMe(ritmEnabled));\n\n  // optional track toggle event\n  if (logEvent) {\n    eventsBin.toggle(enabled);\n  }\n};\n\nlet cancelAudio = toFocus => function() {\n  // optional track cancel event\n  eventsBin.cancel();\n  // move focus to appropriate place, because the cancel button is about to disappear\n  if (toFocus.contains(this)) {\n    toFocus.focus();\n  }\n  cancel();\n};\n\nlet playPauseGroup = (group) => {\n  if (currentGroup === group) {\n    if (group.state === PLAYING_STATE.STOPPED) {\n      // currentGroup === group and the group being stopped should never occur. But, just in case, we'll handle it\n      nextGroup = group;\n      utteranceEnd();\n    } else if (group.state === PLAYING_STATE.PAUSED) {\n      resume();\n    } else if (group.state === PLAYING_STATE.PLAYING) {\n      pause();\n    }\n  } else {\n    nextGroup = group;\n    if (currentGroup) {\n      cancel();\n    } else {\n      utteranceEnd();\n    }\n  }\n};\n\nlet getPlainTextWithPsuedoSemantics = (textAncestor) => {\n  // In a copy of the node list, pepper in (dramatically misuse, hehe) some punctuation for the purpose of adding meaningful pauses and 'emphasis' during text readout.\n  let clonedTextAncestor = textAncestor.cloneNode(true);\n  clonedTextAncestor.querySelectorAll('p, li, abbr, strong, em, h1, h2, h3, h4, h5, h6').forEach((elem) => {\n    let tag = elem.tagName.toUpperCase();\n    if (tag === 'P') {\n      elem.appendChild(document.createTextNode('. '));\n    }\n    else if (tag === \"ABBR\") {\n      let elemText = elem.textContent;\n      let arr = elemText.split('');\n      elem.textContent = arr.join('.');\n    }\n    else if (tag === 'STRONG' || tag === 'EM') {\n      elem.insertBefore(document.createTextNode(', '), elem.firstChild);\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'LI') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n    else if (tag === 'H1' || tag === 'H2' || tag === 'H3' || tag === 'H4' || tag === 'H5' || tag === 'H6') {\n      elem.appendChild(document.createTextNode(', '));\n    }\n  });\n\n  // return the modified text\n  return clonedTextAncestor.textContent;\n};\n\nlet utteranceEnd = () => {\n  if (currentGroup) {\n    currentGroup.setState(PLAYING_STATE.STOPPED);\n    currentGroup = null;\n    controlBar.hideControlBar();\n    controlBar.hideCancelButton();\n  }\n\n  if (nextGroup) {\n    currentGroup = nextGroup;\n    nextGroup = null;\n  }\n\n  if (currentGroup) {\n    play();\n  }\n};\n\nlet play = () => {\n  // setup the new utterance\n  let enhancedText = currentGroup.text();\n  synth.play({text: enhancedText}, utteranceEnd);\n  controlBar.showCancelButton();\n  controlBar.showControlBar();\n  currentGroup.setState(PLAYING_STATE.PLAYING);\n\n  // optional track play event\n  eventsBin.play();\n};\n\nlet pause = () => {\n  synth.pause();\n  currentGroup.setState(PLAYING_STATE.PAUSED);\n\n  // optional track pause event\n  eventsBin.pause();\n};\n\nlet resume = () => {\n  synth.resume();\n  currentGroup.setState(PLAYING_STATE.PLAYING);\n};\n\nlet cancel = () => {\n  controlBar.hideCancelButton();\n  synth.cancel();\n};\n\nexport function init(selectors) {\n  // If there's nothing to read, don't initialize\n  if (!((selectors && document.querySelectorAll(selectors).length > 0) || document.querySelectorAll(`.${groupClassName}`).length > 0)) {\n    return;\n  }\n\n  initSynthesis(undefined, (error, synthesis) => {\n    if (!error && synthesis) {\n      synth = synthesis;\n\n      // if custom selectors were passed in, give the associated elements the default group class\n      if (selectors && document.querySelectorAll(selectors).length > 0) {\n        document.querySelectorAll(selectors).forEach((elem) => {\n          elem.classList.add(groupClassName);\n        });\n      }\n\n      setup();\n    }\n    else {\n      // strip out classes that would apply ReadItToMe visuals\n      document.querySelectorAll(`.${groupClassName}`).forEach((elem) => {\n        elem.classList.remove(groupClassName, focusClassName);\n      });\n    }\n  });\n}\n\nexport function isEnabled () {\n  return ritmEnabled;\n}\n\nexport function currentUtteranceIdentifier() {\n  return (currentGroup && currentGroup.ritmOptionalTrackingIdentifier) || false;\n}\n\nexport const eventTracking = setHandlers;","export const PLAYING_STATE = {\n  STOPPED: 0,\n  PAUSED: 1,\n  PLAYING: 2\n};\n\nexport function createRITMGroup({playPauseGroup, cancelAudio, focusClassName, ritmDisabledClassName, ritmOptionalTrackingIdentifier, elem, text}, {wrapperElement, controlBubbleElement, document}) {\n  // Inner wrap each readable group in a new div.read-this-to-me\n  const wrapper = wrapperElement || document.createElement('div');\n  wrapper.classList.add('read-this-to-me');\n\n  if (!wrapperElement) {\n    elem.appendChild(wrapper);\n    while (elem.firstChild !== wrapper) {\n      wrapper.appendChild(elem.firstChild);\n    }\n  }\n\n  // build the control bubble\n  const controlBubble = controlBubbleElement || document.createElement('div');\n  controlBubble.classList.add('read-it-to-me-control-bubble');\n  controlBubble.tabIndex = -1;\n  controlBubble.innerHTML = '<p class=\"read-it-to-me-label\"></p><button type=\"button\" class=\"play-pause-resume\"></button><button type=\"button\" class=\"cancel-audio\"><span class=\"visually-hidden\">Cancel audio</a></button>';\n\n  const pausePlayButton = controlBubble.querySelector('button.play-pause-resume');\n  const cancelButton = controlBubble.querySelector('button.cancel-audio');\n\n  const focusInListener = e => {\n    // don't want this bubbling up from nested groups\n    e.stopPropagation();\n\n    elem.classList.add(focusClassName);\n  };\n\n  const focusOutListener = e => {\n    // don't want this bubbling up from nested groups\n    e.stopPropagation();\n\n    elem.classList.remove(focusClassName);\n  };\n\n  const playPauseListener = e => {\n    e.stopPropagation();\n    playPauseGroup(group);\n  };\n\n  const cancelListener = cancelAudio(controlBubble);\n\n  const setReadItToMe = enabled => {\n    if (enabled) {\n      elem.classList.remove(ritmDisabledClassName);\n    }\n    else {\n      elem.classList.add(ritmDisabledClassName);\n    }\n    pausePlayButton.disabled = !enabled;\n    cancelButton.disabled = !enabled;\n  };\n\n  const setState = state => {\n    group.state = state;\n\n    if (state === PLAYING_STATE.STOPPED) {\n      elem.classList.remove('read-it-to-me-play');\n      elem.classList.remove('read-it-to-me-pause');\n    } else if (state === PLAYING_STATE.PLAYING) {\n      elem.classList.add('read-it-to-me-play');\n      elem.classList.remove('read-it-to-me-pause');\n    } else if (state === PLAYING_STATE.PAUSED) {\n      elem.classList.remove('read-it-to-me-play');\n      elem.classList.add('read-it-to-me-pause');\n    }\n  };\n\n  const destroy = () => {\n    controlBubble.removeEventListener('focusin', focusInListener);\n    controlBubble.removeEventListener('focusout', focusOutListener);\n    pausePlayButton.removeEventListener('click', playPauseListener);\n    cancelButton.removeEventListener('click', cancelListener);\n  };\n\n  controlBubble.addEventListener('focusin', focusInListener);\n  controlBubble.addEventListener('focusout', focusOutListener);\n  pausePlayButton.addEventListener('click', playPauseListener);\n  cancelButton.addEventListener('click', cancelListener);\n\n  if (!controlBubbleElement) {\n    elem.insertBefore(controlBubble, wrapper);\n  }\n\n  const group = {\n    setReadItToMe,\n    setState,\n    state: PLAYING_STATE.STOPPED,\n    destroy,\n    text\n  };\n\n  return group;\n}","function nullEvent() {}\n\nfunction eventHandlerWrapper(handler) {\n  return event => {\n    try {\n      handler(event);\n    } catch (e) {}\n  };\n}\n\nexport function initEventTracking() {\n  const eventsBin = {\n    play: nullEvent,\n    pause: nullEvent,\n    cancel: nullEvent,\n    toggle: nullEvent\n  };\n\n  function setHandlers(obj) {\n    if (obj) {\n      if (obj.play && typeof obj.play === 'function') {\n        eventsBin.play = eventHandlerWrapper(obj.play);\n      }\n      if (obj.pause && typeof obj.pause === 'function') {\n        eventsBin.pause = eventHandlerWrapper(obj.pause);\n      }\n      if (obj.cancel && typeof obj.cancel === 'function') {\n        eventsBin.cancel = eventHandlerWrapper(obj.cancel);\n      }\n      if (obj.toggle && typeof obj.toggle === 'function') {\n        eventsBin.toggle = eventHandlerWrapper(obj.toggle);\n      }\n    }\n  }\n\n  return {eventsBin, setHandlers};\n}","export function createControlBar({cancelAudio, setReadItToMe}, {document, controlBarElement}) {\n  // build the control bar\n  const controlBar = controlBarElement || document.createElement('div');\n  controlBar.classList.add('read-it-to-me-control-bar');\n  controlBar.setAttribute('tabindex', '0');\n  controlBar.setAttribute('aria-describedby', 'ritm-sr-message');\n  controlBar.innerHTML = `<div class=\"toggle-wrapper\">\n                            <p class=\"visually-hidden\" id=\"ritm-sr-message\">Screen-reader users: there is a rudimentary \"on-demand\" read-aloud feature in use on this page called \"Read-it-to-Me\".  This new feature, which isn't meant as a screen-reader alternative, adds more tabable areas in the document which are great for keyboard users not using screen-readers, but are likely to be annoying for you. You can toggle off/on \"Read-it-to-Me\" using this checkbox.</p>\n                            <p class=\"read-it-to-me-label\">Toggle Read-it-to-Me</p>\n                            <label class=\"switch\" aria-label=\"Toggle Read-it-to-Me.\" aria-describedby=\"ritm-sr-message\">\n                              <input type=\"checkbox\" class=\"switch-input\" checked>\n                              <span class=\"switch-outline\"></span>\n                              <span class=\"switch-label\" data-on=\"On\" data-off=\"Off\"></span>\n                              <span class=\"switch-handle\"></span>\n                            </label>\n                          </div>\n                          <div class=\"cancel-audio-wrapper\">\n                            <button type=\"button\" class=\"btn btn-default btn-lg\">Cancel audio</button>\n                          </div>`;\n\n  const cancelButton = controlBar.querySelector('button');\n  const inputSwitch = controlBar.querySelector('input.switch-input');\n\n  const toggleReadItToMe = (e) => {\n    setReadItToMe(e.target.checked, true);\n  };\n\n  const setReadItToMeStatus = status => inputSwitch.checked = status;\n\n  const controlBarFocusIn = (e) => {\n    if (e.target && controlBar.contains(e.target)) {\n      if (!controlBar.classList.contains('control-bar-show')) {\n        showControlBar();\n      }\n    }\n  };\n\n  const controlBarFocusOut = (e) => {\n    if ((e.relatedTarget && !controlBar.contains(e.relatedTarget)) || !e.relatedTarget) {\n      hideControlBar();\n    }\n  };\n\n  const showCancelButton = () => {\n    controlBar.classList.add('show-ritm-cancel');\n  };\n\n  const hideCancelButton = () => {\n    controlBar.classList.remove('show-ritm-cancel');\n  };\n\n  const showControlBar = () => {\n    controlBar.classList.add('control-bar-show');\n  };\n\n  const hideControlBar = () => {\n    controlBar.classList.remove('control-bar-show');\n  };\n\n  cancelButton.addEventListener('click', cancelAudio(controlBar));\n  inputSwitch.addEventListener('change', toggleReadItToMe);\n  controlBar.addEventListener('focusin', controlBarFocusIn);\n  controlBar.addEventListener('focusout', controlBarFocusOut);\n\n  if (!controlBarElement) {\n    // append the control bar to body where it's least likely to be effected by layout styling and the control bubble so we can attach events to it.\n    let docBody = document.body;\n    docBody.insertBefore(controlBar, docBody.firstChild);\n  }\n\n  return {\n    showCancelButton,\n    hideCancelButton,\n    showControlBar,\n    hideControlBar,\n    setReadItToMe: setReadItToMeStatus\n  };\n}","export function initSynthesis(synth, callback) {\n  let voices = [], failedToLoadVoices = false;\n\n  if (!synth && typeof speechSynthesis !== 'undefined') {\n    synth = speechSynthesis;\n  }\n\n  if (!synth) {\n    callback(new Error('Speech Synthesis is unavailable.'));\n    return;\n  }\n\n  let play = (config, callback = () => {}) => {\n    const u = new SpeechSynthesisUtterance(config.text);\n    u.lang = 'en-US';\n    u.rate = .8;\n    //if voices is populated and the 'Samantha' voice is present on the browser/device, load her up, otherwise don't set a voice so the default is allowed to do it's thing.\n    if (voices.length > 0) {\n      for (let i = 0; i < voices.length; i++) {\n        if (voices[i].lang.indexOf('en') === 0) {\n          if (voices[i].name === 'Samantha') {\n            u.voice = voices[i];\n            break;\n          }\n        }\n      }\n    }\n\n    u.onend = () => callback(null, config);\n\n    u.onerror = event => {\n      setTimeout(() => callback(event.error || new Error('Unknown speech synthesis error'), config), 100);\n    };\n\n    // speak the new utterance\n    synth.speak(u);\n  };\n\n  let pause = () => {\n    synth.pause();\n  };\n\n  let resume = () => {\n    synth.resume();\n  };\n\n  let cancel = () => {\n    synth.cancel();\n  };\n\n  const result = {play, pause, resume, cancel};\n\n  //populate voices [chrome currently will only do this in the context of the onvoiceschanged event]\n  voices = synth.getVoices();\n  if (voices.length === 0) {\n    if (synth.onvoiceschanged !== undefined) {\n      synth.onvoiceschanged = function () {\n        voices = synth.getVoices();\n        callback(null, result);\n      };\n    } else {\n      failedToLoadVoices = true;\n    }\n  }\n\n  // without this initial cancel, Chrome will pretty consistently fail to play the very first utterance (then works on every other utterance)\n  synth.cancel();\n\n  if (!voices.length && failedToLoadVoices) {\n    callback(new Error('Unable to load voice list'));\n  } else if (voices.length) {\n    callback(null, result);\n  }\n}\n"],"names":["synth","PLAYING_STATE","STOPPED","PAUSED","PLAYING","nullEvent","eventHandlerWrapper","handler","event","e","controlBar","currentGroup","nextGroup","groupClassName","focusClassName","contentGroups","ritmEnabled","eventsBin","play","pause","cancel","toggle","setHandlers","obj","initEventTracking","setup","addReadItToMeElements","sessionStorage","getItem","setReadItToMe","document","querySelectorAll","forEach","elem","ritmOptionalTrackingIdentifier","dataset","group","playPauseGroup","cancelAudio","ritmDisabledClassName","text","wrapperElement","controlBubbleElement","wrapper","createElement","classList","add","appendChild","firstChild","controlBubble","tabIndex","innerHTML","pausePlayButton","querySelector","cancelButton","focusInListener","stopPropagation","focusOutListener","remove","playPauseListener","cancelListener","addEventListener","insertBefore","enabled","disabled","setState","state","destroy","removeEventListener","createRITMGroup","getPlainTextWithPsuedoSemantics","push","controlBarElement","setAttribute","inputSwitch","showControlBar","hideControlBar","target","checked","contains","relatedTarget","docBody","body","showCancelButton","hideCancelButton","status","createControlBar","logEvent","strayFocus","removeItem","setItem","toFocus","this","focus","utteranceEnd","resume","textAncestor","clonedTextAncestor","cloneNode","tag","tagName","toUpperCase","createTextNode","arr","textContent","split","join","enhancedText","eventTracking","selectors","length","callback","voices","failedToLoadVoices","speechSynthesis","result","config","u","SpeechSynthesisUtterance","lang","rate","i","indexOf","name","voice","onend","onerror","setTimeout","error","Error","speak","getVoices","undefined","onvoiceschanged","initSynthesis","synthesis"],"mappings":"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"}